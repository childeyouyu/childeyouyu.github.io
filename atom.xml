<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>语之屋</title>
  
  
  <link href="https://childeyouyu.github.io/atom.xml" rel="self"/>
  
  <link href="https://childeyouyu.github.io/"/>
  <updated>2025-01-01T15:00:41.249Z</updated>
  <id>https://childeyouyu.github.io/</id>
  
  <author>
    <name>公子语</name>
    
  </author>
  <follow_challenge>
      <feedId>78279468312666136</feedId>
      <userId>87080982863556608</userId>
  </follow_challenge>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2024 年度总结</title>
    <link href="https://childeyouyu.github.io/posts/38883.html"/>
    <id>https://childeyouyu.github.io/posts/38883.html</id>
    <published>2025-01-01T14:57:48.000Z</published>
    <updated>2025-01-01T15:00:41.249Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今年的年度总结也是一拖再拖，本来想着在冬至发布，又拖到了圣诞节，直到做完，依然没动笔写。</p><p>今年没看到什么合适的1模板，就依然沿用去年的年终总结模板吧。</p><h1 id="健康-锻炼"><a href="#健康-锻炼" class="headerlink" title="健康&#x2F;锻炼"></a>健康&#x2F;锻炼</h1><p>今年运动是几年来最少的，年初的时候会不时来一次有氧拳击，工作以后时间变少，我也不怎么再原意做运动，有一次尝试做有氧拳击只是十分钟就气喘吁吁；这两天尝试着平板支撑也就只能是十几秒一次。</p><p>今年暂时定下一个小目标，以2~3公里一次的短跑，跑足120公里。</p><h1 id="工作与职业"><a href="#工作与职业" class="headerlink" title="工作与职业"></a>工作与职业</h1><p>终于毕业了，我今年以工作了两份工作，第一份延续去年的实习生工作，直到后来发生了两件事，一是毕业设计过于懈怠，老师开始催促我回学校去做，另一个是老板说让我开始做销售相关的工作。</p><p>那天早上心情有不太好，索性辞职回学校去搞毕业设计了。</p><p>六月初，班主任开始催促我找工作，给我介绍了宁波和余杭的两家公司，结果都不太好，后来在学校附近找到了一个也算熟悉的公司，先做机械设计，后来转到产品选型的工作，还是又走到了偏销售的路上，唉。</p><h1 id="个人生活与家庭"><a href="#个人生活与家庭" class="headerlink" title="个人生活与家庭"></a>个人生活与家庭</h1><p>今年家里最大的变化是姐姐结婚了，开始和姐夫在成立住。</p><p>我的生活变得规律起来，日复一日的工作，不时的思考自己是不是像一个上了发条的机器，还是在思考自己做一些税后收入的项目。</p><p>人总是想得多，做出来的却很少，我一直以为自己工作了，赚了钱就是独当一面了，现在看来完全不是，自己想要在某一领域独当一面还远远不够。</p><h1 id="学习和知识管理"><a href="#学习和知识管理" class="headerlink" title="学习和知识管理"></a>学习和知识管理</h1><p>今年学习的内容主要在以下方面：</p><ul><li><p>工作</p><ul><li>学了一段时间有关机械设计的内容，像是SW、CAD；</li><li>后面做技术选型，开始着重学习和公司业务相关的东西，总觉得和技术渐行渐远，偏想了商务。</li></ul></li><li><p>编程</p><ul><li>自从对 tk 比较熟悉之后，我开始不满足它的性能，学习 PySide6、Flet，开始做自己的程序，时不时的和 Tisal 聊一聊彼此学习到的新技术；</li><li>有一天写完了语书摘得而程序后，跑去和春水碧于天大佬献宝，他和我讲了现在谷歌跨平台的新技术，Compose开发安卓程序，我再了解一下很惊喜，又开始学习Android开发；</li><li>朋友问我，能不能搞一个语音芯片，我学了一些 Arduino 相关的内容，但他们做事拖拖拉拉，我也没了继续往下搞得动力，等后虚的计划出来了，再继续学习吧。</li></ul></li></ul><h1 id="旅游与文化"><a href="#旅游与文化" class="headerlink" title="旅游与文化"></a>旅游与文化</h1><h2 id="旅游"><a href="#旅游" class="headerlink" title="旅游"></a>旅游</h2><p>今年在姐姐的赞助下，买了一台佳能600d相机，婚礼时带回家去拍照，拍了许多。</p><p>今年没有出去玩过，回了两次家、八月朋友来杭州，去了次西湖、灵隐、第二次爬飞来峰这座小山峰、去西溪湿地坐了一次摇橹船（好无聊啊）、国庆时跑了一次义乌的商品城。</p><h2 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h2><p>今年记录的影视合计是 39 部，其中评价为 10 分的五部：</p><ul><li><p>电影：</p><ul><li>《当幸福来敲门》</li><li>《情书》</li><li>《星际穿越》</li><li>《一九四二》</li></ul></li><li><p>电视剧：</p><ul><li>《山花烂漫时》</li></ul></li></ul><p>评价为 9 分的一共是 7 部，但是因为自身的评价标准变化，其中一部分觉得现在再评分会有很大的变化，就不再列出。</p><p>今年唯一一个打出1星的时柯南剧场版《黑铁的鱼影》，那天我气愤的评价，这个IP算是完蛋了，从此不再看任何柯南的剧情。有一天在 Green Party 看到一个周边手账，最终间是四个人，毛利兰、新一分立两侧，中间是小哀和柯南，我只能感叹，官方搞 NTR 最无解了。</p><h2 id="图书"><a href="#图书" class="headerlink" title="图书"></a>图书</h2><p>今年《纸间书摘》年度书单报告是 15 本书，其实不止，但基本都是网络小说，或是推理小说，还看了一本余华的散文。</p><p>最喜欢的一本是凑家苗的《告白》，我不算是认真看的这本书，摸鱼时随便看一部分，直到结局突然给了我一个惊喜。最后给它的评价是不错的消遣。</p><h1 id="兴趣和创造"><a href="#兴趣和创造" class="headerlink" title="兴趣和创造"></a>兴趣和创造</h1><p>今年的兴趣主要在编程和游戏商，买了一些游戏，Steam年度汇报的游戏时间也在变长，时不时的玩一玩Switch上面的游戏。</p><p>今年主要玩的有：</p><ul><li>缺氧：玩起来很喜欢，一口气打了很久，毕业后再启动就总觉得时间很紧破了，命名之前也都是一次最多一个多小时</li><li>逃出生天 &amp; 链在一起：这两个游戏都挺好玩的，就是选择队友要慎重，我有惨痛的教训。最后都没有通关，只能说游戏体验很差，最后也都没有通关。</li><li>黑神话悟空：太难了，我还在虎先锋面前跪着（大哭）。</li><li>地平线 5：刚刚开始玩，最终也免不了陷入车枪球的坑。</li><li>塞尔达传说-智慧的再现：公主一出手，就知道什么勇者林克，通通闪一边去；我是属于玩不进去王泪、野炊的人，但是智慧的再现、缩小帽这种游戏真的很戳我，独立游戏给满分好吧。</li><li>宝可梦·朱：其实大部分的剧情都是在模拟器上玩的，可以追溯到23年年初，今年主要是玩了《碧之假面》，DLC的下部还没体验多少。</li><li>逆转裁判456~王逆袭精选集：玩了4和5，第六步实在是太长了就没有打完，其实还可以，就是实在是太长了，而且不知道是不因为有成步堂在兜底，总感觉像是在过家家（吐槽一下人名翻译，感觉开始为了谐音而翻译了）。</li><li>逆转检视12：以前在nds模拟器上玩过两章，最近开始重玩，刚刚打到早期的御剑、系锯刑警刚结识的时候也很有趣。</li></ul><h1 id="情绪-精神状态"><a href="#情绪-精神状态" class="headerlink" title="情绪&amp;精神状态"></a>情绪&amp;精神状态</h1><p>今年的情绪依然是偏于下行的，主要是工作的调动，环境的变化让我开始不再喜欢现在的工作，总是不时的看一看BOSS的工作。</p><h1 id="财务总结"><a href="#财务总结" class="headerlink" title="财务总结"></a>财务总结</h1><p>被苹果Pay坑走了一笔巨款，有剁手买了一个FydeTab Duo（一个半成品平板，价格高昂。最后也没能省下什么钱，还是等明年申请政府补贴吧。</p><h1 id="最骄傲的成就"><a href="#最骄傲的成就" class="headerlink" title="最骄傲的成就"></a>最骄傲的成就</h1><p>今年和 Tisal 关系有变得更好；</p><p>完成了语书摘的第二版开发；</p><p>开始学习安卓。</p><h1 id="最大的挑战"><a href="#最大的挑战" class="headerlink" title="最大的挑战"></a>最大的挑战</h1><p>顺利完成我的工作。</p><h1 id="25-年的规划"><a href="#25-年的规划" class="headerlink" title="25 年的规划"></a>25 年的规划</h1><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><p>今年还是继续学习，第一个就是把待办软件写好，这个程序是为了自己写的，所以有一些个性化的需求（只是开发一个程序怎么这么困难，好多东西都要去调研，自己还没人可以问都是怎么实现的，有时候问AI都不知道怎样去提问。</p><h2 id="消费"><a href="#消费" class="headerlink" title="消费"></a>消费</h2><p>做了一个规划，今年可以攒钱买一辆车，可以代步就行，练一练用车能力。</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>还是想试试找一个更加喜欢的工作，当下状态还是有成长，但用处不大，离了公司这些技能毫无用处。</p><h2 id="创业"><a href="#创业" class="headerlink" title="创业"></a>创业</h2><p>继续思考创业想法，今年能落实一项即可。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>时间有限，今日就写这么多吧。</p>]]></content>
    
    
    <summary type="html">又是新年结束了，停下脚步回顾一下吧。</summary>
    
    
    
    <category term="追求本我" scheme="https://childeyouyu.github.io/categories/%E8%BF%BD%E6%B1%82%E6%9C%AC%E6%88%91/"/>
    
    
  </entry>
  
  <entry>
    <title>国际化开发的经验</title>
    <link href="https://childeyouyu.github.io/posts/40903.html"/>
    <id>https://childeyouyu.github.io/posts/40903.html</id>
    <published>2024-12-20T14:22:36.000Z</published>
    <updated>2024-12-20T14:57:55.501Z</updated>
    
    <content type="html"><![CDATA[<p>耗时一个晚上，从七点到十点终于研究差不多了，开始写总结。</p><p>Python中自带一个进行多语言翻译的模块，名字是<code>gettext</code>，我在<a href="https://www.bilibili.com/video/BV1mfDGYUEWg?vd_source=c1ae0bc3baaf065c2c5af0668d76a361&amp;spm_id_from=333.788.videopod.episodes">哔哩哔哩</a>和博客中搜到了很多关于它的使用教程，但很繁琐，还要用到一个不怎么好用的开源程序<a href="http://www.eazypo.ca/">easypo</a>或是需要付费的<a href="https://poedit.net/">poedit</a>，事实上后者会好用一些，但并没有减轻我开发的繁琐程度，于是研究了一下怎么用Python程序自动化这一过程，我发现了模块<a href="https://babel.pocoo.org/en/latest/index.html">babel</a>。</p><p>关于<code>gettext</code>的基本使用参考上一段的哔哩哔哩链接，本篇文章重点不在于此。</p><iframe src="https://player.bilibili.com/player.html?bvid=BV1mfDGYUEWg&amp;page=1&amp;high_quality=1&amp;as_wide=1&amp;allowfullscreen=true&amp;autoplay=0&amp;isOutside=true&amp;aid=113434515538875&amp;cid=26638093037&amp;p=1" data-src="//player.bilibili.com/player.html?isOutside=true&amp;aid=113434515538875&amp;bvid=BV1mfDGYUEWg&amp;cid=26638093037&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation-by-user-activation allow-same-origin allow-forms allow-scripts allow-popups" style="height: "100%"; width: 100%";"></iframe><h1 id="babel-介绍"><a href="#babel-介绍" class="headerlink" title="babel 介绍"></a>babel 介绍</h1><p>他的自我介绍是：Babel 是一个用于国际化 Python 应用的工具集合。</p><p>它的功能有：</p><ul><li>用于构建和使用 <code>gettext</code> 消息目录</li><li>用于 CLDR（通用区域数据存储库）的 Python 接口，提供对各种区域显示名称、本地化数字和日期格式等的访问。</li></ul><p>我主要使用第一个功能，后面的视程序开发进度决定。</p><h1 id="我的自动化程序及使用方式"><a href="#我的自动化程序及使用方式" class="headerlink" title="我的自动化程序及使用方式"></a>我的自动化程序及使用方式</h1><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p><code>./babel_use.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置变量</span></span><br><span class="line">POT_FILE = <span class="string">&#x27;messages.pot&#x27;</span></span><br><span class="line">LOCALES_DIR = <span class="string">&#x27;locales&#x27;</span></span><br><span class="line">SRC_DIR = <span class="string">&#x27;src&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_command</span>(<span class="params">command</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;运行系统命令&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        subprocess.check_call(command, shell=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;执行时出错 <span class="subst">&#123;<span class="string">&#x27; &#x27;</span>.join(command)&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_babel_cfg</span>():</span><br><span class="line"></span><br><span class="line">    command = <span class="string">f&quot;pybabel extract -F babel.cfg -o messages.pot .&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_pot_file</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;提取可翻译的文本生成.pot文件&quot;&quot;&quot;</span></span><br><span class="line">    command = <span class="string">f&quot;pybabel extract -F babel.cfg -o <span class="subst">&#123;POT_FILE&#125;</span> <span class="subst">&#123;SRC_DIR&#125;</span>&quot;</span></span><br><span class="line">    run_command(command)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init_po_file</span>(<span class="params">lang_code</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;初始化翻译文件生成.po文件&quot;&quot;&quot;</span></span><br><span class="line">    po_file = os.path.join(LOCALES_DIR, lang_code, <span class="string">&#x27;LC_MESSAGES&#x27;</span>, <span class="string">&#x27;messages.po&#x27;</span>)</span><br><span class="line">    command = <span class="string">f&quot;pybabel init -i <span class="subst">&#123;POT_FILE&#125;</span> -d <span class="subst">&#123;LOCALES_DIR&#125;</span> -l <span class="subst">&#123;lang_code&#125;</span>&quot;</span></span><br><span class="line">    run_command(command)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_po_files</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;更新翻译文件&quot;&quot;&quot;</span></span><br><span class="line">    command = <span class="string">f&quot;pybabel update -i <span class="subst">&#123;POT_FILE&#125;</span> -d <span class="subst">&#123;LOCALES_DIR&#125;</span>&quot;</span></span><br><span class="line">    run_command(command)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compile_po_files</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;编译.po文件生成.mo文件&quot;&quot;&quot;</span></span><br><span class="line">    command = <span class="string">f&quot;pybabel compile -d <span class="subst">&#123;LOCALES_DIR&#125;</span>&quot;</span></span><br><span class="line">    run_command(command)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 提取.pot文件</span></span><br><span class="line">    extract_pot_file()</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># # 初始化.po文件，这里以中文为例</span></span><br><span class="line">    <span class="comment"># init_po_file(&#x27;zh_CN&#x27;)</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 更新.po文件</span></span><br><span class="line">    update_po_files()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 编译.po文件</span></span><br><span class="line">    compile_po_files()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="程序文件的树结构"><a href="#程序文件的树结构" class="headerlink" title="程序文件的树结构"></a>程序文件的树结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root:.</span><br><span class="line">│   babel.cfg</span><br><span class="line">│   babel_use.py</span><br><span class="line">│             </span><br><span class="line">├──src</span><br><span class="line">   │   main.py</span><br><span class="line">   │   setup.py</span><br><span class="line">   │</span><br><span class="line">   ├───assets</span><br><span class="line">   │   └───dark_ui</span><br><span class="line">   │</span><br><span class="line">   ├───functions</span><br><span class="line">   └───uis</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，src文件夹放置应用的主要程序，所有的<code>_()</code>都在里面。</p><h2 id="程序初始化"><a href="#程序初始化" class="headerlink" title="程序初始化"></a>程序初始化</h2><p>第一次运行时，需要生成相应的po语言模块，调用函数的顺序为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取.pot文件</span></span><br><span class="line">extract_pot_file()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 初始化.po文件，这里以中文为例</span></span><br><span class="line">init_po_file(<span class="string">&#x27;zh_CN&#x27;</span>)</span><br></pre></td></tr></table></figure><p>生成po文件后到<code>locales/zh_CN/LC_MESSAGES/messages.po</code>进行自己的翻译工作，翻译完成后构建mo文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译.po文件</span></span><br><span class="line">compile_po_files()</span><br></pre></td></tr></table></figure><h2 id="翻译文件更新"><a href="#翻译文件更新" class="headerlink" title="翻译文件更新"></a>翻译文件更新</h2><p>当程序内的字符串发生了变化，需要冲洗进行提取.pot文件，不需要冲洗生成po文件，而是使用更新原始po文件的命令（这样不会丢失以前的翻译好的文件）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取.pot文件</span></span><br><span class="line">extract_pot_file()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新.po文件</span></span><br><span class="line">update_po_files()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进行更新后的字符串的翻译，完成后编译为po文件，大功告成。</p><h2 id="程序运行结束后的树结构"><a href="#程序运行结束后的树结构" class="headerlink" title="程序运行结束后的树结构"></a>程序运行结束后的树结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root:.</span><br><span class="line">│   babel.cfg</span><br><span class="line">│   babel_use.py</span><br><span class="line">│   messages.pot</span><br><span class="line">│   </span><br><span class="line">│         </span><br><span class="line">├───locales</span><br><span class="line">│   └───zh_CN</span><br><span class="line">│       └───LC_MESSAGES</span><br><span class="line">│               messages.mo</span><br><span class="line">│               messages.po</span><br><span class="line">│             </span><br><span class="line">├───src</span><br><span class="line">│   │   main.py</span><br><span class="line">│   │   setup.py</span><br><span class="line">│   │</span><br><span class="line">│   ├───assets</span><br><span class="line">│   │   └───dark_ui</span><br><span class="line">│   │</span><br><span class="line">│   ├───functions</span><br><span class="line">│   └───uis</span><br><span class="line"></span><br><span class="line">└───__pycache__</span><br></pre></td></tr></table></figure><h1 id="一些有的没的"><a href="#一些有的没的" class="headerlink" title="一些有的没的"></a>一些有的没的</h1><h1 id="在powersheel中展示树结构："><a href="#在powersheel中展示树结构：" class="headerlink" title="在powersheel中展示树结构："></a>在<code>powersheel</code>中展示树结构：</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree /f</span><br></pre></td></tr></table></figure><h3 id="视频链接参数"><a href="#视频链接参数" class="headerlink" title="视频链接参数"></a>视频链接参数</h3><table><thead><tr><th>参数</th><th>说明</th><th></th></tr></thead><tbody><tr><td>high_quality</td><td>1 最高画质 0 最低画质</td><td></td></tr><tr><td>danmaku</td><td>1 打开弹幕 0 关闭弹幕</td><td></td></tr><tr><td>autoplay</td><td>1 打开自动播放 0 关闭自动播放</td><td></td></tr></tbody></table><h3 id="iframe-参数"><a href="#iframe-参数" class="headerlink" title="iframe 参数"></a>iframe 参数</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>allowfullscreen</td><td>true 允许全屏 false 不允许</td></tr><tr><td>sandbox</td><td>allow-top-navigation allow-same-origin allow-forms allow-scripts 禁止弹出</td></tr><tr><td>width</td><td>宽度</td></tr><tr><td>height</td><td>高度</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;耗时一个晚上，从七点到十点终于研究差不多了，开始写总结。&lt;/p&gt;
&lt;p&gt;Python中自带一个进行多语言翻译的模块，名字是&lt;code&gt;gettext&lt;/code&gt;，我在&lt;a href=&quot;https://www.bilibili.com/video/BV1mfDGYUEWg?</summary>
      
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="python" scheme="https://childeyouyu.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>节气之歌-大雪</title>
    <link href="https://childeyouyu.github.io/posts/60445.html"/>
    <id>https://childeyouyu.github.io/posts/60445.html</id>
    <published>2024-12-06T14:19:01.000Z</published>
    <updated>2024-12-06T15:24:08.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="时间的刻度"><a href="#时间的刻度" class="headerlink" title="时间的刻度"></a>时间的刻度</h1><p>早上在出门的路口遇到一个小女孩坐在妈妈的电动车后座，背着一个小轮胎样式的书包。<br>路面看起来有些潮湿，杭州的冬季总是这样，伴随着冷雨，比大雪落在身上还要让人心烦。<br>临近立昂时，非机动车道上的多出了一些积水，见证着昨晚发生的变化；说起变化，普洛斯门前因为修路而挖开的几个方块也在一日之间消失得无影无踪，留下几个凹凸不平的沥青缝隙，诉说着自己也曾经来到这世界上。<br>我开始越发频繁的看着Boss上的工作邀请，工业工程或是互联网，仿佛回到了最开始，还没毕业的那段时间，在不同的机会之间反复横跳的样子。<br>我和同事的关系逐渐熟络，和公司的关系却日渐疏远，把一切不开心都怪罪给那天的调整以及徐总两次拒绝我希望到IE部门的申请上。</p><p>有一天领导过来说我们部门不够努力，于是变成了周六强制加班，安慰自己说好赖也是有加班费的，实施的第三周以后开始越来越累，上四休三成了新的执念。星期二的早上，睁开眼睛就是疲惫，我越来越舍不得晚上的时间，久久不肯入睡，和领导说不想上班，在家里休息了一天，总是觉得时不我待，待在家里也没有闲下来。<br>上班的路上有一个红绿灯，在街角等待的间隙，我瞥见对面路边的树已经黄了大半，虽然风不大，却吹落一片片的叶子，金黄的叶子雨散落，不知道路对面的人在想什么，我的确很开心。<br>我和纯说，看那边的树叶落下了，纯说你看身后。这才看到身后的桥上，路边，也是一片片的叶子簌簌掉落，不同的是这里的叶子多了许多红枫，交杂着。<br>今日“大雪”，纯和我说，周六可不可以不值班，一起去九溪烟树看落叶吧，杭州的冬天真叫人哑口无言。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;时间的刻度&quot;&gt;&lt;a href=&quot;#时间的刻度&quot; class=&quot;headerlink&quot; title=&quot;时间的刻度&quot;&gt;&lt;/a&gt;时间的刻度&lt;/h1&gt;&lt;p&gt;早上在出门的路口遇到一个小女孩坐在妈妈的电动车后座，背着一个小轮胎样式的书包。&lt;br&gt;路面看起来有些潮湿，杭州的冬季</summary>
      
    
    
    
    <category term="何不看世界" scheme="https://childeyouyu.github.io/categories/%E4%BD%95%E4%B8%8D%E7%9C%8B%E4%B8%96%E7%95%8C/"/>
    
    
    <category term="随笔" scheme="https://childeyouyu.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="看世界" scheme="https://childeyouyu.github.io/tags/%E7%9C%8B%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>近况和未来一段时间的展望</title>
    <link href="https://childeyouyu.github.io/posts/22044.html"/>
    <id>https://childeyouyu.github.io/posts/22044.html</id>
    <published>2024-12-01T14:51:55.000Z</published>
    <updated>2024-12-01T14:55:20.192Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近一段时间，技术切换比较频繁。</p></blockquote><h2 id="Arduino"><a href="#Arduino" class="headerlink" title="Arduino"></a>Arduino</h2><p>十月末开始，有一位打游戏的搭子找到了我，说是有一些想法，开始研究一些关于嵌入式的东西，搞来了一些arduino、tft屏幕、语音芯片之类的小玩应，以前我在宿舍的时候，曾经看到过我的大学室友学习这些东西；但一切从零开始不是一件容易的事情，我研究了几次不得要领，二搭子也开始忙碌，我便请教了一位校园里的朋友帮我继续这件事，明天或许要再进行一些沟通。</p><h2 id="PySide6"><a href="#PySide6" class="headerlink" title="PySide6"></a>PySide6</h2><p>《纸间书摘》对应程序的开发已经完成，我的用户很给力，上线后立刻给予了第一份捐赠，我想这个程序也就到此为止了，毕竟没什么宣传渠道。</p><h2 id="Compose"><a href="#Compose" class="headerlink" title="Compose"></a>Compose</h2><p>结束了Python开发，工作中心正式到了安卓上，昨天下午加班结束后，开始在公司摸鱼学习一份新的技术，compose，相比于以往的《第一行代码》，谷歌的教程更加的让人心动，它实在是太优雅了，但可惜第二章之后这样优秀的教程似乎就结束了，后面的部分还要找一些其他的教程来学习。</p><p>学习中，我的新项目《语待办》也可以一起做起来了，语待办命运多舛，我为了他思考过PySide6、Flet、Flutter这些不同的技术方案，都觉得差点意思，现在真心觉得Compose是一个很好的方案。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近一段时间，技术切换比较频繁。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Arduino&quot;&gt;&lt;a href=&quot;#Arduino&quot; class=&quot;headerlink&quot; title=&quot;Arduino&quot;&gt;&lt;/a&gt;Arduino&lt;/h2&gt;&lt;p</summary>
      
    
    
    
    <category term="追求本我" scheme="https://childeyouyu.github.io/categories/%E8%BF%BD%E6%B1%82%E6%9C%AC%E6%88%91/"/>
    
    
    <category term="随笔" scheme="https://childeyouyu.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="周记" scheme="https://childeyouyu.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>笔记-SSH 配置</title>
    <link href="https://childeyouyu.github.io/posts/14641.html"/>
    <id>https://childeyouyu.github.io/posts/14641.html</id>
    <published>2024-12-01T14:27:38.000Z</published>
    <updated>2024-12-01T14:31:19.058Z</updated>
    
    <content type="html"><![CDATA[<p>记录关于ssh链接到github的命令。</p><h1 id="前置教程"><a href="#前置教程" class="headerlink" title="前置教程"></a>前置教程</h1><p><a href="https://childeyouyu.github.io/posts/ea40.html">在windows上安装scoop</a>。</p><h1 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h1><ol><li><p>安装git</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install git</span><br></pre></td></tr></table></figure></li><li><p>生成ssh key</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;xxx@xxx.com&quot;</span></span><br></pre></td></tr></table></figure><p> 替换自己的邮箱地址，回车直到结束。</p></li><li><p>将公钥添加到github<br> <img src="https://pic2.ziyuan.wang/user/Knoll9337/2024/12/1733058459501_17959a0a0cd5d.png" alt="1733058459501.png"></p></li><li><p>验证是否成功</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录关于ssh链接到github的命令。&lt;/p&gt;
&lt;h1 id=&quot;前置教程&quot;&gt;&lt;a href=&quot;#前置教程&quot; class=&quot;headerlink&quot; title=&quot;前置教程&quot;&gt;&lt;/a&gt;前置教程&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://childeyouyu.githu</summary>
      
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>最近的变化</title>
    <link href="https://childeyouyu.github.io/posts/25708.html"/>
    <id>https://childeyouyu.github.io/posts/25708.html</id>
    <published>2024-11-26T13:52:33.000Z</published>
    <updated>2024-11-26T14:25:56.310Z</updated>
    
    <content type="html"><![CDATA[<p>最近给自己规划了许多小软件，不久之前纸间书摘的用户找到我希望可以更新三月时写的一个程序，花费了两个星期一边学习PySide6,一边完善了软件的功能，很开心。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近给自己规划了许多小软件，不久之前纸间书摘的用户找到我希望可以更新三月时写的一个程序，花费了两个星期一边学习PySide6,一边完善了软件的功能，很开心。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="何不看世界" scheme="https://childeyouyu.github.io/categories/%E4%BD%95%E4%B8%8D%E7%9C%8B%E4%B8%96%E7%95%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>PySide6开发日记（二）</title>
    <link href="https://childeyouyu.github.io/posts/23589.html"/>
    <id>https://childeyouyu.github.io/posts/23589.html</id>
    <published>2024-11-21T14:07:49.000Z</published>
    <updated>2024-12-01T14:54:21.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="笔记二-富文本格式"><a href="#笔记二-富文本格式" class="headerlink" title="笔记二 富文本格式"></a>笔记二 富文本格式</h1><p>关于设置文字自动换行以及问题：纯数字时自动换行不起作用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置文字为富文本格式，字体大小16pt</span></span><br><span class="line">book_name_label = QLabel(</span><br><span class="line">        <span class="string">f&quot;&lt;span style=&#x27;font-size:16pt&#x27;&gt;<span class="subst">&#123;book_name&#125;</span>&lt;/span&gt;&quot;</span></span><br><span class="line">    )</span><br><span class="line"><span class="comment"># 设置自动换行</span></span><br><span class="line">book_name_label.setWordWrap(<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>一些问题：如果文字是纯数字将不起作用。</p><h1 id="笔记三-滚动布局"><a href="#笔记三-滚动布局" class="headerlink" title="笔记三 滚动布局"></a>笔记三 滚动布局</h1><p>设置滚动布局：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">area = QScrollArea()</span><br><span class="line">widget_area = QWidget()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注1</span></span><br><span class="line">area.setWidgetResizable(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">layout_area = QVBoxLayout(widget_area)</span><br><span class="line">layout_area.addStretch(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">area.setWidget(widget_area)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注1：处理坑，子控件大小和area不一致，设置area的属性。</p><h1 id="笔记四-分割线"><a href="#笔记四-分割线" class="headerlink" title="笔记四 分割线"></a>笔记四 分割线</h1><ol><li>分割线</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置一个分割线</span></span><br><span class="line">frame = QFrame()</span><br><span class="line">frame.setFrameShape(QFrame.Shape.HLine)  <span class="comment"># 设置为水平分割线</span></span><br><span class="line">frame.setLineWidth(<span class="number">1</span>)  <span class="comment"># 设置分割线宽度为1像素</span></span><br><span class="line">layout_area.addWidget(frame)</span><br></pre></td></tr></table></figure><ol start="2"><li>分割用的矩形</li></ol><p>可以用来填充界面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建QFrame</span></span><br><span class="line">frame = QtWidgets.QFrame(<span class="variable language_">self</span>)</span><br><span class="line">frame.setFrameShape(QtWidgets.QFrame.StyledPanel)</span><br><span class="line">frame.setFrameShadow(QtWidgets.QFrame.Raised)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置尺寸策略为自动扩充</span></span><br><span class="line">sizePolicy = QtWidgets.QSizePolicy(</span><br><span class="line">    QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding</span><br><span class="line">)</span><br><span class="line">frame.setSizePolicy(sizePolicy)</span><br><span class="line">frame.setFrameShape(QtWidgets.QFrame.NoFrame)</span><br><span class="line"><span class="comment"># 设置QFrame背景为透明</span></span><br><span class="line">frame.setAttribute(QtCore.Qt.WA_TranslucentBackground)</span><br><span class="line"></span><br><span class="line">layout.addWidget(frame)</span><br></pre></td></tr></table></figure><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>本来以为这个系列可以出很多期，结果现在的项目很快也就写完了，PySide6还有很多不完善的地方，我又开始纠结犹豫，和《纸间书摘》的开发者聊了之后他推荐给我一套新的技术栈，这周终于有时间看了一下，基于compose的安卓开发比以往容易了许多，kotlin+compose终于变得优雅起来了，相比之下感觉比flutter更让人心动？</p><p>总之开始学习起来了。</p>]]></content>
    
    
    <summary type="html">从今天开始，语之屋开始写自己的周记。</summary>
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="python" scheme="https://childeyouyu.github.io/tags/python/"/>
    
    <category term="PySide6" scheme="https://childeyouyu.github.io/tags/PySide6/"/>
    
    <category term="周记" scheme="https://childeyouyu.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>PySide6开发日记（一）</title>
    <link href="https://childeyouyu.github.io/posts/52319.html"/>
    <id>https://childeyouyu.github.io/posts/52319.html</id>
    <published>2024-11-11T14:07:49.000Z</published>
    <updated>2024-12-01T14:53:53.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PySide6开发日记（一）"><a href="#PySide6开发日记（一）" class="headerlink" title="PySide6开发日记（一）"></a>PySide6开发日记（一）</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　今年早些时候，为国产读书书摘记录软件做了一个api导入程序，第一版发布后有两个用户，但后面就没关注这个程序了，半个月之前其中一位用户向我询问能否为程序增加一些新的功能，就此我开始程序v0.2版本的开发。</p><p>　　程序名字是《merpyzf_pyside6》，顾名思义，技术栈是PySide6，于是继续一边学习一边写新功能，目前来看新版本开发会持续几周，索性就当作周记，每周记录自己的学习心得。</p><h1 id="笔记一：程序的顶部状态栏"><a href="#笔记一：程序的顶部状态栏" class="headerlink" title="笔记一：程序的顶部状态栏"></a>笔记一：程序的顶部状态栏</h1><h2 id="1-隐藏系统状态栏"><a href="#1-隐藏系统状态栏" class="headerlink" title="1. 隐藏系统状态栏"></a>1. 隐藏系统状态栏</h2><p>　　虽然暂时没有打算做Mac OS和Linux版本，但是Windows的系统UI已经让我大为不爽了，于是开始研究无边框模式，搜到了许多教程，但实测下来能用的确实都有各种各样的问题。</p><p>　　最后连带AI和各种资料总算是写出了我需要的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication([])</span><br><span class="line"></span><br><span class="line">    window = QMainWindow()</span><br><span class="line">    window.setWindowTitle(<span class="string">&#x27;隐藏系统状态栏&#x27;</span>)</span><br><span class="line">    window.resize(<span class="number">400</span>, <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    layout = QVBoxLayout(window)</span><br><span class="line">    label = QLabel(<span class="string">&#x27;这是一个无状态栏示例&#x27;</span>)</span><br><span class="line">    layout.addWidget(label)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 隐藏状态栏</span></span><br><span class="line">    window.setWindowFlag(Qt.WindowType.FramelessWindowHint)</span><br><span class="line"></span><br><span class="line">    window.show()</span><br><span class="line">    app.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure><p>　　核心部分就是<code>setWindowFlag</code>​。起初我在网络上查找相关代码时看到了许多教程，但是当我尝试导入Qt时，显示在QtCore、QtGui类下都存在Qt库，便一直没能成功，最后索性使用<code>*</code>​进行导入。</p><h2 id="2-设置最大化，最小化以及关闭程序按钮，并放置在合适的位置"><a href="#2-设置最大化，最小化以及关闭程序按钮，并放置在合适的位置" class="headerlink" title="2. 设置最大化，最小化以及关闭程序按钮，并放置在合适的位置"></a>2. 设置最大化，最小化以及关闭程序按钮，并放置在合适的位置</h2><p>　　三个按钮很好搞定，QPushbutton+icon属性就搞定了。</p><p>　　我想到可以用菜单栏用于放置它们，PySide6中当然也有相关的功能，QToolBar组件。</p><p>　　于是第一版程序很快就写出来了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">window_max</span>(): ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication([])</span><br><span class="line"></span><br><span class="line">    window = QMainWindow()</span><br><span class="line">    window.setWindowTitle(<span class="string">&quot;隐藏系统状态栏&quot;</span>)</span><br><span class="line">    window.resize(<span class="number">400</span>, <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    widget_center = QWidget()</span><br><span class="line">    layout = QVBoxLayout(widget_center)</span><br><span class="line">    label = QLabel(<span class="string">&quot;这是一个无状态栏示例&quot;</span>)</span><br><span class="line">    layout.addWidget(label)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 隐藏状态栏</span></span><br><span class="line">    window.setWindowFlag(Qt.WindowType.FramelessWindowHint)</span><br><span class="line"></span><br><span class="line">    toolbar = QToolBar()</span><br><span class="line">    <span class="comment"># 设置工具栏不可移动</span></span><br><span class="line">    toolbar.setMovable(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 填充工具栏左侧，让三个按钮被放置到最右侧</span></span><br><span class="line">    widget_fill = QWidget()</span><br><span class="line">    toolbar.addWidget(widget_fill)</span><br><span class="line">    layout_toolbar = QHBoxLayout(widget_fill)</span><br><span class="line">    layout_toolbar.addStretch()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置三个按钮，并将其设置为图片形式</span></span><br><span class="line">    btn_min = QPushButton(icon=QIcon(<span class="string">&quot;assets/min.svg&quot;</span>))</span><br><span class="line">    btn_max = QPushButton(icon=QIcon(<span class="string">&quot;assets/icon-max.svg&quot;</span>))</span><br><span class="line">    btn_close = QPushButton(icon=QIcon(<span class="string">&quot;assets/close.svg&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 去除按钮边框</span></span><br><span class="line">    btn_min.setFlat(<span class="literal">True</span>)</span><br><span class="line">    btn_max.setFlat(<span class="literal">True</span>)</span><br><span class="line">    btn_close.setFlat(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将按钮放置在toolbar上</span></span><br><span class="line">    toolbar.addWidget(btn_min)</span><br><span class="line">    toolbar.addWidget(btn_max)</span><br><span class="line">    toolbar.addWidget(btn_close)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为按钮增加功能，其中最大化按钮需要额外函数进行修饰</span></span><br><span class="line">    btn_min.clicked.connect(window.showMinimized)</span><br><span class="line">    btn_max.clicked.connect(<span class="keyword">lambda</span>: window_max())</span><br><span class="line">    btn_close.clicked.connect(window.close)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将toolbar放置到window上</span></span><br><span class="line">    window.addToolBar(toolbar)</span><br><span class="line">    window.setCentralWidget(widget_center)</span><br><span class="line">    window.show()</span><br><span class="line">    app.<span class="built_in">exec</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>　　运行效果：</p><p>​<img src="https://youyupicgo.s3.bitiful.net/2024/11/40363653485429c1f64be0ad72d3b59b.png" alt="image">​</p><h2 id="3-窗口拖动"><a href="#3-窗口拖动" class="headerlink" title="3 窗口拖动"></a>3 窗口拖动</h2><p>　　隐藏窗口一时爽，隐藏以后动不了，当我发现窗口开始变得不能移动后人都傻掉了，只好开始寻找方法。</p><p>　　处理方法也不难，当我发现PySide6中存在三个函数（<code>mousePressEvent</code>​、<code>mouseMoveEvent</code>​、<code>mouseReleaseEvent</code>​）后，这件事就变得简单起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QMainWindow</span>(<span class="title class_ inherited__">QMainWindow</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self, event</span>):  <span class="comment"># 当鼠标按钮被按下时调用此函数</span></span><br><span class="line">        <span class="keyword">if</span> event.button() == Qt.LeftButton:</span><br><span class="line">            <span class="variable language_">self</span>._move_drag = <span class="literal">True</span></span><br><span class="line">            <span class="variable language_">self</span>.cursor_win_pos = event.globalPosition() - <span class="variable language_">self</span>.pos()</span><br><span class="line">            event.accept()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseMoveEvent</span>(<span class="params">self, event</span>):  <span class="comment"># 当鼠标移动时调用此函数</span></span><br><span class="line">        <span class="comment"># 如果鼠标左键被按下并且可以拖动窗口</span></span><br><span class="line">        <span class="keyword">if</span> Qt.LeftButton <span class="keyword">and</span> <span class="variable language_">self</span>._move_drag:</span><br><span class="line">            m_Point = (</span><br><span class="line">                event.globalPosition() - <span class="variable language_">self</span>.cursor_win_pos</span><br><span class="line">            )  <span class="comment"># 计算新的鼠标全局坐标与初始位置的差值</span></span><br><span class="line">            <span class="variable language_">self</span>.move(<span class="built_in">int</span>(m_Point.x()), <span class="built_in">int</span>(m_Point.y()))  <span class="comment"># 根据差值移动窗口到新的位置</span></span><br><span class="line">            event.accept()  <span class="comment"># 接受事件，不再传递</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseReleaseEvent</span>(<span class="params">self, event</span>):  <span class="comment"># 鼠标按键释放时,取消移动</span></span><br><span class="line">        <span class="variable language_">self</span>._move_drag = <span class="literal">False</span></span><br><span class="line">        event.accept()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">window_max</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.isMaximized():</span><br><span class="line">            <span class="variable language_">self</span>.showNormal()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.showMaximized()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication([])</span><br><span class="line"></span><br><span class="line">    window = QMainWindow()</span><br><span class="line">    window.setWindowTitle(<span class="string">&quot;隐藏系统状态栏&quot;</span>)</span><br><span class="line">    window.resize(<span class="number">400</span>, <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    window._move_drag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    widget_center = QWidget()</span><br><span class="line">    layout = QVBoxLayout(widget_center)</span><br><span class="line">    label = QLabel(<span class="string">&quot;这是一个无状态栏示例&quot;</span>)</span><br><span class="line">    layout.addWidget(label)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 隐藏状态栏</span></span><br><span class="line">    window.setWindowFlag(Qt.WindowType.FramelessWindowHint)</span><br><span class="line"></span><br><span class="line">    toolbar = QToolBar()</span><br><span class="line">    <span class="comment"># 设置工具栏不可移动</span></span><br><span class="line">    toolbar.setMovable(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 填充工具栏左侧，让三个按钮被放置到最右侧</span></span><br><span class="line">    widget_fill = QWidget()</span><br><span class="line">    toolbar.addWidget(widget_fill)</span><br><span class="line">    layout_toolbar = QHBoxLayout(widget_fill)</span><br><span class="line">    layout_toolbar.addStretch()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置三个按钮，并将其设置为图片形式</span></span><br><span class="line">    btn_min = QPushButton(icon=QIcon(<span class="string">&quot;assets/min.svg&quot;</span>))</span><br><span class="line">    btn_max = QPushButton(icon=QIcon(<span class="string">&quot;assets/icon-max.svg&quot;</span>))</span><br><span class="line">    btn_close = QPushButton(icon=QIcon(<span class="string">&quot;assets/close.svg&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 去除边框</span></span><br><span class="line">    btn_min.setFlat(<span class="literal">True</span>)</span><br><span class="line">    btn_max.setFlat(<span class="literal">True</span>)</span><br><span class="line">    btn_close.setFlat(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将按钮放置在toolbar上</span></span><br><span class="line">    toolbar.addWidget(btn_min)</span><br><span class="line">    toolbar.addWidget(btn_max)</span><br><span class="line">    toolbar.addWidget(btn_close)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为按钮增加功能，其中最大化按钮需要额外函数进行修饰</span></span><br><span class="line">    btn_min.clicked.connect(window.showMinimized)</span><br><span class="line">    btn_max.clicked.connect(<span class="keyword">lambda</span>: window.window_max())</span><br><span class="line">    btn_close.clicked.connect(window.close)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将toolbar放置到window上</span></span><br><span class="line">    window.addToolBar(toolbar)</span><br><span class="line">    window.setCentralWidget(widget_center)</span><br><span class="line"></span><br><span class="line">    window.show()</span><br><span class="line">    app.<span class="built_in">exec</span>()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>　　不过今天在写博客时，我发现了一个新的办法，不需要重写这三个方法，看起来更加的简洁实用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QMainWindow</span>(<span class="title class_ inherited__">QMainWindow</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">window_max</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.isMaximized():</span><br><span class="line">            <span class="variable language_">self</span>.showNormal()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.showMaximized()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_title_bar</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="variable language_">self</span>.windowHandle().startSystemMove()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication([])</span><br><span class="line"></span><br><span class="line">    window = QMainWindow()</span><br><span class="line">    window.setWindowTitle(<span class="string">&quot;隐藏系统状态栏&quot;</span>)</span><br><span class="line">    window.resize(<span class="number">400</span>, <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    window._move_drag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    widget_center = QWidget()</span><br><span class="line">    layout = QVBoxLayout(widget_center)</span><br><span class="line">    label = QLabel(<span class="string">&quot;这是一个无状态栏示例&quot;</span>)</span><br><span class="line">    layout.addWidget(label)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 隐藏状态栏</span></span><br><span class="line">    window.setWindowFlag(Qt.WindowType.FramelessWindowHint)</span><br><span class="line"></span><br><span class="line">    toolbar = QToolBar()</span><br><span class="line">    <span class="comment"># 设置工具栏不可移动</span></span><br><span class="line">    toolbar.setMovable(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 填充工具栏左侧，让三个按钮被放置到最右侧</span></span><br><span class="line">    widget_fill = QWidget()</span><br><span class="line">    toolbar.addWidget(widget_fill)</span><br><span class="line">    layout_toolbar = QHBoxLayout(widget_fill)</span><br><span class="line">    layout_toolbar.addStretch()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置三个按钮，并将其设置为图片形式</span></span><br><span class="line">    btn_min = QPushButton(icon=QIcon(<span class="string">&quot;assets/min.svg&quot;</span>))</span><br><span class="line">    btn_max = QPushButton(icon=QIcon(<span class="string">&quot;assets/icon-max.svg&quot;</span>))</span><br><span class="line">    btn_close = QPushButton(icon=QIcon(<span class="string">&quot;assets/close.svg&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 去除边框</span></span><br><span class="line">    btn_min.setFlat(<span class="literal">True</span>)</span><br><span class="line">    btn_max.setFlat(<span class="literal">True</span>)</span><br><span class="line">    btn_close.setFlat(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将按钮放置在toolbar上</span></span><br><span class="line">    toolbar.addWidget(btn_min)</span><br><span class="line">    toolbar.addWidget(btn_max)</span><br><span class="line">    toolbar.addWidget(btn_close)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为按钮增加功能，其中最大化按钮需要额外函数进行修饰</span></span><br><span class="line">    btn_min.clicked.connect(window.showMinimized)</span><br><span class="line">    btn_max.clicked.connect(<span class="keyword">lambda</span>: window.window_max())</span><br><span class="line">    btn_close.clicked.connect(window.close)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将toolbar放置到window上</span></span><br><span class="line">    window.addToolBar(toolbar)</span><br><span class="line">    window.setCentralWidget(widget_center)</span><br><span class="line"></span><br><span class="line">    toolbar.mouseMoveEvent = window.move_title_bar</span><br><span class="line"></span><br><span class="line">    window.show()</span><br><span class="line">    app.<span class="built_in">exec</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>　　其实核心部分只有以下两点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">move_title_bar</span>(<span class="params">self, event</span>):</span><br><span class="line">    <span class="variable language_">self</span>.windowHandle().startSystemMove()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">toolbar.mouseMoveEvent = window.move_title_bar</span><br></pre></td></tr></table></figure><p>　　不仅实现了移动，而且只有光标在toolbar上时才会执行，更加符合使用习惯了吧哈哈哈。</p><hr><h1 id="未完事项"><a href="#未完事项" class="headerlink" title="未完事项"></a>未完事项</h1><ul><li><input disabled="" type="checkbox"> 实现拖动边框进行窗口的大小设置；</li></ul><p>　　‍</p>]]></content>
    
    
    <summary type="html">从今天开始，语之屋开始写自己的周记。</summary>
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="python" scheme="https://childeyouyu.github.io/tags/python/"/>
    
    <category term="PySide6" scheme="https://childeyouyu.github.io/tags/PySide6/"/>
    
    <category term="周记" scheme="https://childeyouyu.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>新电脑：因为在此电脑上禁止运行脚本 问题的解决</title>
    <link href="https://childeyouyu.github.io/posts/59813.html"/>
    <id>https://childeyouyu.github.io/posts/59813.html</id>
    <published>2024-09-05T03:34:08.000Z</published>
    <updated>2024-10-02T04:04:21.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题的发生"><a href="#问题的发生" class="headerlink" title="问题的发生"></a>问题的发生</h1><p>问题发生于使用<code>.ps1</code>下载 Windows 镜像时，总是会弹出的错误：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">无法加载文件 C:\Users\youyu\Download\Fido.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=<span class="number">135170</span> 中的 about_Execution_Policies。</span><br><span class="line"></span><br><span class="line">+ CategoryInfo : SecurityError: (:) []，ParentContainsErrorRecordException</span><br><span class="line"></span><br><span class="line">+ FullyQualifiedErrorId : UnauthorizedAccess</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="问题出现的原因"><a href="#问题出现的原因" class="headerlink" title="问题出现的原因"></a>问题出现的原因</h1><p>问题描述也很清楚，于是就上网搜一下解决方案。原因在于：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Restricted 执行策略不允许任何脚本运行。  </span><br><span class="line"></span><br><span class="line">AllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。</span><br><span class="line"></span><br><span class="line"> 本主题说明如何运行所选未签名脚本（即使在执行策略为 RemoteSigned 的情况下），还说明如何对  脚本进行签名以便您自己使用。</span><br><span class="line"></span><br><span class="line">有关 Windows PowerShell 执行策略的详细信息，请参阅 about_Execution_Policy。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进一步确保相关设置是否像问题描述所说的一样可以输入<code>get-executionpolicy</code></p><p>如果运行结果为：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get-executionpolicy</span><br><span class="line">RemoteSigned</span><br></pre></td></tr></table></figure><p>就不是相关原因造成的，可以关闭文章找其他办法了。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>如果不是就打开 PowerShell（管理员身份），输入：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>-executionpolicy remotesigned</span><br></pre></td></tr></table></figure><p>在继续选项中输入 Y。</p><p>Finished！</p>]]></content>
    
    
    <summary type="html">最近公司的工作频繁变动，经常要重新安装系统，在一台新电脑上想要使用 Ps.1 下载镜像时遇到了一些问题，将解决方案放在下面。</summary>
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Windows" scheme="https://childeyouyu.github.io/tags/Windows/"/>
    
    <category term="命令行" scheme="https://childeyouyu.github.io/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>SQLite 数据类型</title>
    <link href="https://childeyouyu.github.io/posts/36818.html"/>
    <id>https://childeyouyu.github.io/posts/36818.html</id>
    <published>2024-08-27T00:03:46.000Z</published>
    <updated>2024-10-02T04:05:35.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sqlite"><a href="#Sqlite" class="headerlink" title="Sqlite"></a>Sqlite</h1><p>SQLite 是一个让人喜欢的不得了的数据库，对于我个人而言，没有大量数据需要处理，从来没有过一定要使用 MySQL 或者是 PostgreSQL 的场景。</p><h1 id="数据类型记录"><a href="#数据类型记录" class="headerlink" title="数据类型记录"></a>数据类型记录</h1><table><thead><tr><th>存储类</th><th>描述</th></tr></thead><tbody><tr><td>NULL</td><td>值是一个 NULL 值。</td></tr><tr><td>INTEGER</td><td>值是一个带符号的整数，根据值的大小存储在 1、2、3、4、6 或 8 字节中。</td></tr><tr><td>REAL</td><td>值是一个浮点值，存储为 8 字节的 IEEE 浮点数字。</td></tr><tr><td>TEXT</td><td>值是一个文本字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储。</td></tr><tr><td>BLOB</td><td>值是一个 blob 数据，完全根据它的输入存储。</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">记录使用 Sqlite 中的学习。</summary>
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用 RSS 来保护隐私和提高效率-(翻译)</title>
    <link href="https://childeyouyu.github.io/posts/1066.html"/>
    <id>https://childeyouyu.github.io/posts/1066.html</id>
    <published>2024-03-06T13:01:04.000Z</published>
    <updated>2024-03-18T01:44:54.509Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文地址 <a href="https://rsapkf.org/weblog/rss">https://rsapkf.org/weblog/rss</a></p></blockquote><p>社交媒体网站充斥着广告、跟踪器和欺骗模式。尽管出于隐私原因或时间考虑，我很想避免使用它们，但如果没有它们，就不可能跟上时事。</p><p> RSS（“真正简单的聚合”）给你两全其美。对于门外汉来说，这是一种不必单独浏览它们或注册社交媒体的“订阅”网站的方式。通过 RSS 提要的集合，您可以从提要阅读器中了解来自多个源（提供 RSS 提要）的最新更新。</p><p>提供私人&#x2F;公共 RSS 提要的流行网站包括 GitHub，YouTube，Reddit 和 Stack Overflow。也有很多方法可以为 Twitter 和 Instagram 等其他网站获取 RSS 提要。在本文档中，除了如何使用和管理 RSS 订阅之外，我还想提出一个总体的一般隐私提示，通过访问 Reddit 和 YouTube 等社交媒体网站的隐私保护替代前端来减少您的数字足迹。</p><h2 id="将所有内容迁移到-RSS"><a href="#将所有内容迁移到-RSS" class="headerlink" title="将所有内容迁移到 RSS"></a>将所有内容迁移到 RSS</h2><p>这可能听起来有点自私，但我已经停止订阅&#x2F;关注任何在线的东西&#x2F;任何人。当一个网站上的每一次互动都被跟踪并用于销售你的数据和提供有针对性的广告时，我不认为这是令人惊讶的。</p><p>我用我的 RSS 阅读器。没有必要登录 YouTube 和“订阅”频道来查看我最喜欢的频道的新上传或“加入”subreddits 来跟上 Reddit 上的热门帖子，或“关注”Twitter 上的帐户。这些都是可以用一个好的提要阅读器来管理的事情。有优秀的开源解决方案来管理各种平台的提要：</p><ul><li>博客和基于文本的网站的 <a href="https://newsboat.org/">Newsboat</a></li></ul><p>Newsboat 是一个 *nix 系统的命令行提要阅读器，它可以从纯文本文件中读取提要列表。它提供了一个强大的语法来管理标签&#x2F;文件夹，自定义标题，提要集合，创建过滤列表等。</p><ul><li><a href="https://newpipe.net/">NewPipe</a> for YouTube</li></ul><p>NewPipe 是一个第三方 Android 应用程序，允许您直接从 Google Takeout 提供的 <code>subscriptions.csv</code> 导入订阅。您还可以添加更多订阅，保存&#x2F;创建播放列表，创建自定义频道组并在本地保存它们，而无需使用 YouTube 的界面。</p><p>其他提供类似功能的应用程序是 Android 版的 LibreTube 和桌面版的 FreeTube。</p><p>PS: 推荐中国宝宝使用 <a href="https://github.com/InfinityLoop1308/PipePipe">PipePipe</a>, 一个基于 NewPipe 开发的开源软件，加入了对哔哩哔哩的支持。</p><ul><li>用于播客的 <a href="https://antennapod.org/">Advertising Pod</a></li></ul><p>除了无广告体验外，它还提供了使用 gPodder 帐户在线同步提要的功能。</p><p>所有这些应用程序都支持导入&#x2F;导出，因此您可以始终控制数据。</p><p>有基于云的服务来管理您的列表，如 Newsblur，Quite RSS，Inoreader 或 Feedly 以及自托管解决方案，如 TinyTiny RSS 或 Fresh RSS。</p><p>一些网站如 YouTube 仍然支持 RSS 提要，而其他网站如 Twitter 则不支持。本节记录了各种流行平台的 RSS 提要的直接链接。使用这些技巧来创建您自己的收藏或使用像这样的预制收藏。</p><h3 id="Hacker-News"><a href="#Hacker-News" class="headerlink" title="Hacker News"></a><a href="#hacker-news">Hacker News</a></h3><ul><li><p>首页：news.ycombinator.com&#x2F;rss</p></li><li><p>显示 HN：news.ycombinator.com&#x2F;showrss </p></li><li><p>hnrss 是一个开源项目，为各种 HN 资源提供 RSS 提要。以下是一些示例：</p><ul><li>带有关键字“django”的新线程：hnrss.org&#x2F;newest?q&#x3D;django</li><li>用户’dang’提交的新帖子：hnrss.org&#x2F;submitted?id&#x3D;dang</li><li>新职位与 100+ 赞成票和 25+ 评论：hnrss.org&#x2F;show?points&#x3D;100&amp;comments&#x3D;25</li></ul></li></ul><h3 id="Lobsters"><a href="#Lobsters" class="headerlink" title="Lobsters"></a><a href="#lobsters">Lobsters</a></h3><ul><li>首页：obste.rs&#x2F;rss </li><li>Tag（s）<br>*<br />lobste.rs&#x2F;t&#x2F;programming.rss（网络）<br>*<br />lobste.rs&#x2F;t&#x2F;programming，compsci.rss （web）</li></ul><h3 id="Reddit"><a href="#Reddit" class="headerlink" title="Reddit"></a>Reddit<a href="#reddit"></a></h3><p>在 URL 的末尾添加 <code>.rss </code> ：</p><ul><li>首页：<a href="https://reddit.com/.rss">https://reddit.com/.rss</a> </li><li>子编辑：<ul><li><a href="https://reddit.com/r/programming.rss">reddit.com&#x2F;r&#x2F;programming.rss </a></li><li><a href="https://www.reddit.com/r/LifeProTips/top.rss">reddit.com&#x2F;r&#x2F;LifeProTips&#x2F;top.rss </a></li></ul></li><li>用户：reddit.com&#x2F;u&#x2F;spez.rss</li><li>Multireddit：<ul><li><a href="https://www.reddit.com/user/reddit/m/admin_faves.rss">reddit.com&#x2F;user&#x2F;reddit&#x2F;m&#x2F;admin_faves.rss </a></li><li><a href="https://reddit.com/r/programming+javascript+unixporn.rss">reddit.com&#x2F;r&#x2F;programming+javascript+unixporn.rss</a></li></ul></li></ul><h3 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a><a href="#youtube">YouTube</a></h3><ul><li>渠道：youtube.com&#x2F;feeds&#x2F;videos.xml?channel_id&#x3D;UCYO_jab_esuFRV4b17AJtAw</li><li>播放列表：youtube.com&#x2F;feeds&#x2F;videos.xml?playlist_id&#x3D;PL3A5849BDE0581B19</li></ul><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub<a href="#github"></a></h3><ul><li>发布：github.com&#x2F;3b1b&#x2F;manim&#x2F;releases.atom</li><li>提交：github.com&#x2F;3b1b&#x2F;manim&#x2F;commits&#x2F;master.atom</li><li>标签：github.com&#x2F;3b1b&#x2F;manim&#x2F;tags.atom</li></ul><p>要获取您最近活动的私人提要，您可以单击 GitHub 主页底部的“订阅您的新闻提要”。</p><h3 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab<a href="#gitlab"></a></h3><ul><li>活动：gitlab.com&#x2F;inkscape&#x2F;inkscape.atom</li><li>提交：gitlab.com&#x2F;inkscape&#x2F;inkscape&#x2F;-&#x2F;commits&#x2F;master?format&#x3D;atom</li><li>标签：gitlab.com&#x2F;inkscape&#x2F;inkscape&#x2F;-&#x2F;tags&#x2F;master?format&#x3D;atom</li><li>问题：gitlab.com&#x2F;inkscape&#x2F;inkscape&#x2F;-&#x2F;tags&#x2F;master?format&#x3D;atom</li></ul><h3 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a><a href="#stack-overflow">Stack Overflow</a></h3><ul><li>Tag（s）<ul><li><a href="https://stackoverflow.com/feeds/tag?tagnames=haskell&sort=newest">stackoverflow.com&#x2F;feeds&#x2F;tag? tagnames&#x3D;haskell&amp;sort&#x3D;newest</a></li><li><a href="https://stackoverflow.com/feeds/tag?tagnames=haskell+java&sort=newest">stackoverflow.com&#x2F;feeds&#x2F;tag? tagnames&#x3D;haskell+java&amp;sort&#x3D;newest</a></li></ul></li></ul><h3 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a><a href="#twitter">Twitter</a></h3><p>Twitter 在 2013 年停止提供官方 Feed。但是，您可以使用 <a href="https://nitter.net/">nitter.net</a> 进行此操作。</p><ul><li>用户：nitter.net&#x2F;xkcd&#x2F;rss</li></ul><h3 id="Mastodon"><a href="#Mastodon" class="headerlink" title="Mastodon"></a><a href="#mastodon">Mastodon</a></h3><ul><li>用户：mastodon.social&#x2F;@Gargron.rss 或 mastodon.social&#x2F;users&#x2F;Gargron.atom</li></ul><h3 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a><a href="#medium">Medium</a></h3><ul><li>用户：medium.com&#x2F;feed&#x2F;@Medium</li><li>标签：medium.com&#x2F;feed&#x2F;tag&#x2F;programming<br />[更多信息](<a href="https://help.medium.com/hc/en-us/articles/214874118-">https://help.medium.com/hc/en-us/articles/214874118-</a> RSS -feeds)</li></ul><h3 id="Instagram"><a href="#Instagram" class="headerlink" title="Instagram"></a>Instagram<a href="#instagram"></a></h3><p>Bibliogram，一个第三方替代 Instagram 前端为 Instagram 帐户提供 Rss&#x2F;Atom 提要：</p><ul><li>用户：bibliogram.art&#x2F;u&#x2F;starwars&#x2F;rss.xml 或 bibliogram.art&#x2F;u&#x2F;starwars&#x2F;atom.xml</li></ul><p>对于不提供可访问的 RSS&#x2F;Atom提要的网站，如 Facebook 或 Twitch，RSS -Bridge 项目提供基于为这些网站开发的“<a href="https://rss-bridge.github.io/rss-bridge/">桥梁</a>”的提要。必要时考虑使用它。</p><p>这个 gist 有到许多其他平台的 RSS 链接。</p><h2 id="从手机中删除应用程序"><a href="#从手机中删除应用程序" class="headerlink" title="从手机中删除应用程序"></a><a href="#removing-apps-from-your-phone">从手机中删除应用程序</a></h2><p>除了占用更多的空间和带宽外，移动的应用程序比网站更能直接访问您的个人信息。但是，配置了 uBlock Origin 和 Privacy Badger 等广告拦截器的浏览器沿着内置隐私选项（地理位置&#x2F;指纹识别拦截器，多帐户容器和 Firefox 上的增强跟踪保护等）启用将在您访问的所有网站上工作，并阻止嵌入其中的各种跟踪器。</p><p>如果你愿意为了隐私而给予一点点便利，可以考虑使用这些尊重隐私的前端：</p><ul><li>Twitter 的 Nitter</li><li>Reddit 的 teddit &#x2F; libreddit</li><li>Instagram 的参考书目</li></ul><p>但问题仍然存在，像 multireddits 或 Twitter 列表这样的功能怎么办？有很多方法可以解决。</p><p>对于 Reddit，如果你的自定义 feed 有少于 25 个 subreddit，你可以使用 <code>+</code> 技巧来加入多个 subreddit feed，并将链接保存为书签。例如：reddit.com&#x2F;r&#x2F;pics+videos+wtf 和 reddit.com&#x2F;r&#x2F;pics+videos+wtf.rss。</p><p>有其他用户为不同主题创建的公共 multireddits&#x2F;Twitter 列表，如 programming, Linux, security, cats 等。</p><p>必要时使用移动的站点。大多数网站都有完全可用的移动响应网站。如果您必须使用移动的应用程序，您可以使用 NetGuard 来阻止对每个应用程序的互联网访问。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a><a href="#conclusion">结论</a></h2><p> RSS 是管理订阅的一种非常简洁的方式，同时节省了大量的时间。我敦促所有的博客和网站管理员在他们的网站上添加一个 RSS&#x2F;Atom提要，尊重他们的用户，而不是显示一个丑陋的，分散注意力的模式，要求一个电子邮件。</p><p>有官方和第三方的方式来获得各种网站的 RSS 提要。有很好的开源提要阅读器来管理这些订阅。使用替代网站&#x2F;应用程序而不是移动的应用程序来减少数据泄漏。</p><p>使用 RSS 来保护隐私和效率。</p><p>PS:欺骗模式（也称为“黑暗模式”）是网站和应用程序中使用的技巧，可以让您做一些您不想做的事情，例如购买或注册某些东西。举例来说：</p><ul><li>用户很难比较产品，因为功能和价格以复杂的方式结合在一起，或者因为很难找到必要的信息。</li><li>用户在情感上被操纵去做一些他们本来不会做的事情。</li><li>用户错误地认为他们正在点击界面元素或本地内容，但实际上这是一种伪装的行为。</li><li>用户被迫完成一个动作，因为他们被呈现了一个有限供应或受欢迎的虚假指示。</li><li>用户被误导认为产品比实际更受欢迎或更可信，因为他们看到了虚假的评论，推荐或活动消息。</li><li>用户被迫完成一个动作，因为他们看到了一个虚假的时间限制。</li><li>用户被迫完成一个动作，因为他们看到了一个虚假的时间限制。</li><li>用户发现注册或订阅很容易，但当他们想取消时，他们发现很难。</li><li>用户被广告上的低价所吸引。在投入时间和精力之后，他们在到达结账台时发现了意想不到的费用和收费。</li><li>用户在没有明确披露或明确同意的情况下，在不知不觉中加入了定期订阅或付款计划。</li><li>用户试图做一些事情，但他们不断被要求做一些可能不符合他们最佳利益的其他事情的请求打断。</li><li>用户试图做一些事情，但他们不断被要求做一些可能不符合他们最佳利益的其他事情的请求打断。</li><li>向用户呈现已经为他们选择的默认选项，以影响他们的决策。</li><li>用户被以虚假的借口吸引到交易中，因为相关的信息被隐藏或延迟呈现给他们。</li><li>由于呈现混淆或误导性语言，用户被误导采取行动。</li><li>用户期望在页面上看到以清晰和可预测的方式呈现的信息，但这些信息是隐藏的，模糊的或伪装的。</li></ul>]]></content>
    
    
    <summary type="html">看到一篇不错的 RSS 介绍文章，翻译一下。</summary>
    
    
    
    
    <category term="翻译" scheme="https://childeyouyu.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>3 月软件推荐</title>
    <link href="https://childeyouyu.github.io/posts/fc02.html"/>
    <id>https://childeyouyu.github.io/posts/fc02.html</id>
    <published>2024-03-03T00:05:59.000Z</published>
    <updated>2024-03-11T11:53:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2024-03-软件推荐"><a href="#2024-03-软件推荐" class="headerlink" title="2024-03 软件推荐"></a>2024-03 软件推荐</h2><h2 id="加入软件分享群"><a href="#加入软件分享群" class="headerlink" title="加入软件分享群"></a>加入软件分享群</h2><p><img src="https://pic.ziyuan.wang/user/Knoll9337/2024/03/httpsu.wechat.comMIC6-y6bvNXz4LHjBes7orM_6b0df679961a6.png" alt="语的微信"></p><h2 id="2024-03-22"><a href="#2024-03-22" class="headerlink" title="2024-03-22"></a>2024-03-22</h2><h3 id="wingetui"><a href="#wingetui" class="headerlink" title="wingetui"></a><a href="https://www.marticliment.com/wingetui/">wingetui</a></h3><p>一个图形用户界面，旨在帮助您管理Windows最常见的包管理器中的包，例如Winget，Scoop，Chocolatey，Pip，Npm，.NET Tool和PowerShell Gallery。</p><h2 id="2024-03-21"><a href="#2024-03-21" class="headerlink" title="2024-03-21"></a>2024-03-21</h2><h3 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h3><p>TVBox 是一款电视盒子播放器，开源免费，简洁无广告，可以添加源，速度和资源量是根据添加的配置而决定的，只要添加的配置里的线路给力，就可以做到流畅观看电视直播、电视剧、电影等。</p><p>视频源推荐：</p><ul><li><a href="http://饭太硬.top/tv">http:&#x2F;&#x2F;饭太硬.top&#x2F;tv</a></li><li><a href="https://www.lige.fit/tvbox">https://www.lige.fit/tvbox</a></li><li><a href="https://s.niao.su/8/">https://s.niao.su/8/</a></li><li><a href="https://www.juwanhezi.com/other/jsonlist">https://www.juwanhezi.com/other/jsonlist</a></li><li><a href="https://agit.ai/butterfly/gaotianliuyun">https://agit.ai/butterfly/gaotianliuyun</a></li></ul><ul><li>下载地址：<a href="https://www.123pan.com/s/lbwrVv-hQWIh.html">https://www.123pan.com/s/lbwrVv-hQWIh.html</a></li></ul><h2 id="2024-03-19"><a href="#2024-03-19" class="headerlink" title="2024-03-19"></a>2024-03-19</h2><h2 id="草料二维码"><a href="#草料二维码" class="headerlink" title="草料二维码"></a><a href="https://cli.im/">草料二维码</a></h2><p>灵活组合各种功能模块，根据实际需求搭建二维码系统；无须下载APP，用微信小程序作为操作端。</p><h2 id="2024-03-18"><a href="#2024-03-18" class="headerlink" title="2024-03-18"></a>2024-03-18</h2><h3 id="音乐时刻"><a href="#音乐时刻" class="headerlink" title="音乐时刻"></a><a href="https://www.123pan.com/s/lbwrVv-hQWIh.html">音乐时刻</a></h3><p>一款可以听音乐，下载音乐的软件，免费无广告。</p><p>软件支持安卓。</p><ul><li>下载地址：<a href="https://www.123pan.com/s/lbwrVv-hQWIh.html">https://www.123pan.com/s/lbwrVv-hQWIh.html</a></li></ul><p>软件更新：</p><ul><li><a href="https://sdt.zishu.life/download.html">闪电藤：2.1.7</a><blockquote><p>修复 bug，支持剪贴板同步（会员功能）</p></blockquote></li></ul><h2 id="2024-03-16"><a href="#2024-03-16" class="headerlink" title="2024-03-16"></a>2024-03-16</h2><h3 id="bilidown"><a href="#bilidown" class="headerlink" title="bilidown"></a><a href="https://zhouql.vip/bilibili/pc/">bilidown</a></h3><p>一款简洁好用的 B 站视频下载工具<br>支持由 UP 主上传的单集，多集及相关封面，弹幕，字幕，音乐，刮削等等。<br>支持任意粒度批量组合，登录后支持到 1080P，大会员可获取所有音质及画质。 </p><ul><li>下载地址：<a href="https://www.123pan.com/s/lbwrVv-hQWIh.html">https://www.123pan.com/s/lbwrVv-hQWIh.html</a></li></ul><p>软件更新：</p><ul><li>闪电藤：2.1.6<blockquote><p>[全新功能]</p><p>支持自动剪贴板同步 @守护 @Rsugar @闪电侠客（免费版本限制最多 20 个字同步，付费会员不限字数）</p><p>[体验优化]</p><ul><li>优化下拉刷新连接，连接速度更快</li><li>设备会话页，发送和接收的背景色用不同颜色展示，更清晰区分发送和接收 @HotWater</li></ul><p>[BUG 修复]<br>手机系统相册&#x2F;文件管理器多选分享异常问题<br>修复扫码连接多 IP 设备只连第一个 IP 的问题<br>dwg 的格式文件的回显问题 @面条渣渣</p></blockquote></li><li>nian: 24.3.1<blockquote><p>记账本统计页，账目支持按日历显示，范围选择器支持自定义日期范围。</p><p>优化部分页面细节，修复部分反馈过来的问题，提升性能和稳定性。<br>打卡本部分图表日期采用双排显示，上面月份，下面日期。</p></blockquote></li></ul><h2 id="2024-03-11"><a href="#2024-03-11" class="headerlink" title="2024-03-11"></a>2024-03-11</h2><h3 id="Flow-Launcher"><a href="#Flow-Launcher" class="headerlink" title="Flow.Launcher"></a><a href="https://github.com/Flow-Launcher/Flow.Launcher">Flow.Launcher</a></h3><p>快速启动工具，如果说快速启动工具有一个排行榜，我觉得 Flow.Launcher 可以排在前三，其他的两个是：Listary 和 Utools。</p><p>但是！Flow.Launcher 是免费的呀。</p><p><img src="https://pic.ziyuan.wang/user/Knoll9337/2024/03/Flow.Launcher_cc362077a6aeb.gif" alt="Flow.Launcher.gif"></p><h2 id="24-3-6"><a href="#24-3-6" class="headerlink" title="24-3-6"></a>24-3-6</h2><h3 id="res-downloader"><a href="#res-downloader" class="headerlink" title="res-downloader"></a><a href="https://github.com/putyy/res-downloader?tab=readme-ov-file">res-downloader</a></h3><p>获取视频、音频、图片、m3u8 支持获取视频号、抖音、快手、小红书、酷狗音乐、qq 音乐、微信小程序等网络资源</p><ul><li>下载地址：</li></ul><p><a href="https://wwjv.lanzoum.com/b04wgtfyb">蓝奏云下载 密码:9vs5</a> </p><h2 id="24-3-5"><a href="#24-3-5" class="headerlink" title="24-3-5"></a>24-3-5</h2><h3 id="91-搜游-soyo"><a href="#91-搜游-soyo" class="headerlink" title="91 搜游 soyo"></a>91 搜游 soyo</h3><p>一个怀旧的手机游戏论坛，有很多的 Java 时代的手机游戏。</p><ul><li>下载地址：</li></ul><p><a href="https://www.123pan.com/s/lbwrVv-CesIh.html">https://www.123pan.com/s/lbwrVv-CesIh.html</a></p><h2 id="24-3-4"><a href="#24-3-4" class="headerlink" title="24-3-4"></a>24-3-4</h2><h3 id="c001apk"><a href="#c001apk" class="headerlink" title="c001apk"></a><a href="https://rsshub.app/github/branches/bggRGjQaUbCoE/c001apk">c001apk</a></h3><p>第三方酷安 app，完蛋，让你用到真酷安了。软件支持安卓。</p><ul><li>下载地址：</li></ul><p><a href="https://www.123pan.com/s/lbwrVv-BlsIh.html">https://www.123pan.com/s/lbwrVv-BlsIh.html</a></p><h2 id="24-3-3"><a href="#24-3-3" class="headerlink" title="24-3-3"></a>24-3-3</h2><h3 id="奇妙影视"><a href="#奇妙影视" class="headerlink" title="奇妙影视"></a>奇妙影视</h3><p>基于开源的 TV-box 开发的一款影视应用，下载即用。支持安卓。</p><ul><li>下载地址：</li></ul><p><a href="https://www.123pan.com/s/lbwrVv-x0sIh.html">https://www.123pan.com/s/lbwrVv-x0sIh.html</a></p><h2 id="24-3-2"><a href="#24-3-2" class="headerlink" title="24-3-2"></a>24-3-2</h2><h3 id="闪电藤"><a href="#闪电藤" class="headerlink" title="闪电藤"></a><a href="https://sdt.zishu.life/">闪电藤</a></h3><p>局域网文件传输。全平台支持。</p><ul><li>下载地址：</li></ul><p><a href="https://www.123pan.com/s/lbwrVv-a0sIh.html">https://www.123pan.com/s/lbwrVv-a0sIh.html</a></p><h2 id="24-3-1"><a href="#24-3-1" class="headerlink" title="24-3-1"></a>24-3-1</h2><h3 id="Jane-Reader"><a href="#Jane-Reader" class="headerlink" title="Jane Reader"></a><a href="https://janereader.com/#downloads">Jane Reader</a></h3><p>现代化的 epub 阅读器，沉浸式的阅读体验。支持 Windows、MacOS。</p><ul><li>下载地址：</li></ul><p><a href="https://www.123pan.com/s/lbwrVv-P0sIh.html">https://www.123pan.com/s/lbwrVv-P0sIh.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2024-03-软件推荐&quot;&gt;&lt;a href=&quot;#2024-03-软件推荐&quot; class=&quot;headerlink&quot; title=&quot;2024-03 软件推荐&quot;&gt;&lt;/a&gt;2024-03 软件推荐&lt;/h2&gt;&lt;h2 id=&quot;加入软件分享群&quot;&gt;&lt;a href=&quot;#加入软件分享</summary>
      
    
    
    
    
    <category term="软件推荐" scheme="https://childeyouyu.github.io/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>AHK 自动复制的实现与逻辑分析</title>
    <link href="https://childeyouyu.github.io/posts/d3ee.html"/>
    <id>https://childeyouyu.github.io/posts/d3ee.html</id>
    <published>2024-01-11T11:26:15.000Z</published>
    <updated>2024-01-11T13:54:56.509Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>温馨提示：</p><p>本文使用 Ahk v2 进行代码编写，如有需求，自行修改为 v1 代码。</p><p>文章涉及思路分析与错误代码展示，需要成品可以下拉到最后查看。</p></blockquote><p>  昨天学习了 KeyWait，第一反应是可以做一个自动复制的脚本。</p><p>  说干就干，仔细分析一下功能需求：</p><ol><li><p>鼠标左键按下，选中文本，实现复制；</p></li><li><p>鼠标点击需要插入文本的地方<code>Ctrl+V</code>​粘贴文本。</p></li></ol><h1 id="初步尝试"><a href="#初步尝试" class="headerlink" title="初步尝试"></a>初步尝试</h1><p>  第一版代码出来了：</p><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">~LButton::</span>&#123;</span><br><span class="line">KeyWait <span class="string">&quot;LButton&quot;</span></span><br><span class="line">Send <span class="string">&quot;^c&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  写的很快，错的也很快。</p><p>  虽然实现了快速复制，但是我每次鼠标点击都会触发事件。</p><p>  回到需求 2，很明显复制的文本会立刻被覆盖，难道用来（搭配微信输入法）做剪贴板同步吗？</p><p>  鸡肋！（骂骂咧咧继续思考）</p><h1 id="引入sleep​和GetKeyState​"><a href="#引入sleep​和GetKeyState​" class="headerlink" title="引入sleep​和GetKeyState​"></a>引入<code>sleep</code>​和<code>GetKeyState</code>​</h1><p>  一夜无果，第二天重新思考并在群里进行了询问。</p><p>  很明显，我不需要在任何时候去进行复制，而选择被复制的文本肯定需要一定时间。</p><p>  初步将这个时间定为 <strong>1s</strong>。</p><p>  首先是决定加入<code>sleep</code>​，简单的加入并不能解决问题，因为会阻塞运行，导致我的鼠标勾选不显示。</p><p>  由群里@逍遥大佬的第一版本建议出现了，我接触到一个新的函数<code>GetKeyState</code>​：</p><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">~LButton::</span>&#123;</span><br><span class="line">    StartTime := <span class="built_in">A_TickCount</span></span><br><span class="line">    While GetKeyState(<span class="string">&quot;LButton&quot;</span>, <span class="string">&quot;P&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        If (<span class="built_in">A_TickCount</span> - StartTime &gt; <span class="number">2000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Send <span class="string">&quot;^c&quot;</span></span><br><span class="line">            <span class="keyword">Return</span></span><br><span class="line">        &#125;</span><br><span class="line">        Sleep <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">建议的很好，仍然觉得哪里不对，打开文档查一下：</span><br><span class="line"></span><br><span class="line">&gt; 对于键盘键和鼠标按钮，如果键位向下 (或切换开启), 该函数返回 1(true) 如果键位向上 (或切换关闭), 该函数返回 0(false).</span><br><span class="line"></span><br><span class="line">  咦，这样看来，`while`​循环发生在我按住鼠标的时候啊，那岂不是不等我完全选中就要开始复制了？</span><br><span class="line"></span><br><span class="line">  事实证明，的确如此（大哭）。</span><br><span class="line"></span><br><span class="line"># 问题解决（两种方案）</span><br><span class="line"></span><br><span class="line">  我没解决，饭后再看发现群里已经出现了两种解法，鲁迅说过：拿来吧你，现在都是我的了。</span><br><span class="line"></span><br><span class="line">  本着拿来主义精神，我对代码分析后得到了满足需求的两个版本：</span><br><span class="line"></span><br><span class="line">  第一个版本仍然是逍遥大佬给出的：</span><br><span class="line"></span><br><span class="line">```ahk</span><br><span class="line">~LButton:: &#123;</span><br><span class="line">StartTime := A_TickCount</span><br><span class="line">While GetKeyState(&quot;LButton&quot;, &quot;P&quot;)</span><br><span class="line">&#123;</span><br><span class="line">Sleep 10</span><br><span class="line">&#125;</span><br><span class="line">If (A_TickCount - StartTime &gt; 1000)</span><br><span class="line">&#123;</span><br><span class="line">; MsgBox &quot;长按左键 1 秒钟了！&quot;</span><br><span class="line">Send &quot;^c&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  这个解法的思路是：要在松开左键时判断，那就在左键按住时阻塞他，于是有了<code>while</code>​循环的<code>Sleep</code>​，当释放鼠标，进行判断。</p><p>  思路奇妙而省心。（今日大收获之<code>while</code>​不仅可以用来循环，还可以用来等待）</p><p>  第二个版本是@白天提出：</p><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">~LButton::</span> &#123;</span><br><span class="line">StartTime := <span class="built_in">A_Now</span></span><br><span class="line">KeyWait <span class="string">&quot;LButton&quot;</span></span><br><span class="line">if DateDiff(<span class="built_in">A_Now</span>, StartTime, <span class="string">&quot;Seconds&quot;</span>) &gt;= <span class="number">1</span> &#123;</span><br><span class="line">SendInput <span class="string">&quot;^c&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  这里以按下左键触发程序，然后立刻做了一个锚点<code>StartTime</code>​，当 KeyWait 执行结束后将时间进行对比，这其实更加的合理，只是我最初的思路是，一步到位的等待 KeyWait LButton Up，反而执行失败。</p><p>  思考的点在于，我没料到，在我一直按住左键这段时间，可以额外添加一个<code>KeyWait &quot;LButton&quot;</code>​来进行判断。</p><hr><p>  写程序最重要的是思维，今天一个程序的两个解法让我收获匪浅，今后将继续学习下去。</p><p>  最后重新放上两种解法：</p><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">~LButton::</span> &#123;</span><br><span class="line">StartTime := <span class="built_in">A_TickCount</span></span><br><span class="line">While GetKeyState(<span class="string">&quot;LButton&quot;</span>, <span class="string">&quot;P&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Sleep <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line">If (<span class="built_in">A_TickCount</span> - StartTime &gt; <span class="number">1000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">; MsgBox &quot;长按左键 1 秒钟了！&quot;</span></span><br><span class="line">Send <span class="string">&quot;^c&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">~LButton::</span> &#123;</span><br><span class="line">StartTime := <span class="built_in">A_Now</span></span><br><span class="line">KeyWait <span class="string">&quot;LButton&quot;</span></span><br><span class="line">if DateDiff(<span class="built_in">A_Now</span>, StartTime, <span class="string">&quot;Seconds&quot;</span>) &gt;= <span class="number">1</span> &#123;</span><br><span class="line">SendInput <span class="string">&quot;^c&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  ‍</p>]]></content>
    
    
    <summary type="html">昨天学习了 KeyWait，第一反应是可以做一个自动复制的脚本。</summary>
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="AHK" scheme="https://childeyouyu.github.io/tags/AHK/"/>
    
  </entry>
  
  <entry>
    <title>左手</title>
    <link href="https://childeyouyu.github.io/posts/a706.html"/>
    <id>https://childeyouyu.github.io/posts/a706.html</id>
    <published>2024-01-04T14:46:41.000Z</published>
    <updated>2024-01-21T04:20:16.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生为左手"><a href="#生为左手" class="headerlink" title="生为左手"></a>生为左手</h2><p>生为左手，不同于主流，我比我的搭档更加灵活，大脑也认同这一点。</p><p>我可以更快的学习，拥有更灵活的身手。</p><p>那是第五年的某一天，我开始有了自己的记忆。</p><p>一座农家小院，透过彩色的玻璃看到外面的世界偏离了色彩，小孩子在家里跑来跑去，我感受到自己强而有力。</p><p>关于童年，我曾有过无数的记忆。像是拉开弹弓命中自己，拿起镰刀割破右手的身体，我总是带着他兴冲冲的出去，又很快他哭着跑回来。</p><p>为何我强而有力，却总是显得笨拙？</p><p>继续向过往回忆，是那个夏日的午后，他在学习？他去吃饭。</p><p>放下筷子后，他第一次选择了右手，我看到了小右得意而阴险的表情，我听到了他欣喜又激动的语气。</p><p>“我失败了。”</p><p>我想，我应该就此退出。</p><h2 id="进退维谷"><a href="#进退维谷" class="headerlink" title="进退维谷"></a>进退维谷</h2><p>“他可以同时用两只手。”</p><p>这是在哪里？</p><p>我从自我的世界中苏醒，手上的是筷子吗？</p><p>嘿，老兄，你还好吗？</p><p>我与久违的老朋友打了声招呼，换来的却是陌生的回复。也对，我已经很久没有出来过了，外面早已经是一代新人换旧人。</p><p>那么，现在我又是在什么地方呢？一间拥挤的屋子，一群红光满面的人，一圈我不认识的亲戚。看起来又是哪家的婚礼罢。</p><p>明明大家都用右手吃饭，却有人会不舒服，真是奇怪。</p><p>小小少年被安排坐到那里，换上了我抓起筷子，耳边传来的是声声称颂。</p><p>“他可以同时用两只手，真厉害。”</p><p>年少的称赞，大多不是来自于少年本身，一是对孩子的热爱、二是看孩子父母的面子，少年照单全收。</p><p>我也曾风光一阵，在我和小右势均力敌的时代。</p><p>我看得见的此消彼长，我渐渐的退步抽身，只有时不时的遇到新物件，我会被大脑潜意识的拿起，直到与人碰撞。</p><p>“咦，你用左手打球啊。”</p><p>乒乓球桌上，羽毛球场，或是台球案上，我总是突然被看到，或是意识到自己与其他人的不同，于是换上了小右。</p><p>小右跃跃欲试，他总是比我灵活，他早就比我灵活。</p><p>但他不行。</p><h2 id="世界、小右和我"><a href="#世界、小右和我" class="headerlink" title="世界、小右和我"></a>世界、小右和我</h2><p>我是在什么时候被要求退下的？</p><p>那年，他要上学，他年龄太小，于是老师说：他用左手写字，这样子不行的。</p><p>于是强行让小右上了场。</p><p>小右比我努力吧，或许如此。</p><p>总之在那个午后，小右接过了我的工作，从此笔由他握住。</p><p>我不记得我工作时是怎样的光景，只是在几年后的一天，爸爸问他，你还会用你的左手吗？</p><p>我许久没有拿起笔，就像是初生的稚子，笨拙。</p><p>小右的字虽然流利，还是很丑；小右用筷子渐渐比我好的多了，仅此而已。</p><p>笨拙的小右获得了我的权柄，没能去发扬光大。</p><p>我不知道我是不是会做的更好，我永远也不会了。</p><p>我的天赋就像是遇到滔滔江水，只能被裹挟着流到下游，从此不见踪迹。</p><h2 id="另一个小左"><a href="#另一个小左" class="headerlink" title="另一个小左"></a>另一个小左</h2><p>或许在另一个世界，我不是这样的境遇。</p><p>就像在那天，看到的它。</p><p>高中时代，我见到了那个用左手写字的人。</p><p>他其貌不扬，却用左手写出一手好字。</p><p>老师喜欢说你们的右手要拿起笔。</p><p>于是我们的视线望向它，可以拿起笔的左手。</p><p>在时代滚滚时，它可以自由的放飞自我。</p><p>或许，在另一个世界，我也如此。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;生为左手&quot;&gt;&lt;a href=&quot;#生为左手&quot; class=&quot;headerlink&quot; title=&quot;生为左手&quot;&gt;&lt;/a&gt;生为左手&lt;/h2&gt;&lt;p&gt;生为左手，不同于主流，我比我的搭档更加灵活，大脑也认同这一点。&lt;/p&gt;
&lt;p&gt;我可以更快的学习，拥有更灵活的身手。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="文艺的风" scheme="https://childeyouyu.github.io/categories/%E6%96%87%E8%89%BA%E7%9A%84%E9%A3%8E/"/>
    
    
    <category term="散文" scheme="https://childeyouyu.github.io/tags/%E6%95%A3%E6%96%87/"/>
    
    <category term="奇思妙想" scheme="https://childeyouyu.github.io/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Next Cloud 容器挂载主机文件夹</title>
    <link href="https://childeyouyu.github.io/posts/9ea6.html"/>
    <id>https://childeyouyu.github.io/posts/9ea6.html</id>
    <published>2024-01-04T12:24:20.000Z</published>
    <updated>2024-01-04T15:59:18.044Z</updated>
    
    <content type="html"><![CDATA[<p>Hello，大家好，这期我来给大家讲一下如何在 next cloud 云盘中挂载本机的目录。</p><ol><li><p>我们打开 zimaos，应用商店搜索 Next Cloud 安装；</p></li><li><p>打开文件，选择一个我们想要去映射的文件夹，我选择 download，现在记住这个地址是 DATA&#x2F;Download；</p></li><li><p>打开 Next Cloud 容器右上角三个点，选择设置，添加卷，选择刚刚的 Download，右面输入 <code>/download</code>。记住右侧的路径；<img src="https://b3logfile.com/file/2024/01/siyuan/1644380880609/assets/image-20240104202056-fjkilov.png?imageView2/2/interlace/1/format/webp" alt="image"></p><p>701 x 3942560 x 1440</p></li><li><p>打开 Next Cloud，点击右上角，选择应用，我们向下滑，找到一个名字是 External storage support 的应用，启用；</p></li><li><p>打开设置，这里要注意，不是个人，下面有个管理，划到管理，在下面有一个外部储存；<br>​<img src="https://b3logfile.com/file/2024/01/siyuan/1644380880609/assets/image-20240104202157-eme3ch9.png?imageView2/2/interlace/1/format/webp" alt="image"></p><p>701 x 3942560 x 1440</p></li><li><p>选中允许用户挂载储存；</p></li><li><p>现在我选择这里增加储存，选择本地；</p></li><li><p>目录名称：挂载后显示的名称；配置：刚刚保存的 <code>/Download</code>；可用于：所有用户或是选择单个用户；点击右侧对号保存，最左侧显示绿色对号则挂载成功。</p><p><img src="https://b3logfile.com/file/2024/01/siyuan/1644380880609/assets/image-20240104202254-57dfxrd.png?imageView2/2/interlace/1/format/webp" alt="image"></p><p>701 x 3942560 x 1440</p></li><li><p>回到文件目录可以查看。<br>​<img src="https://b3logfile.com/file/2024/01/siyuan/1644380880609/assets/image-20240104202327-639wxiu.png?imageView2/2/interlace/1/format/webp" alt="image"></p><p>701 x 3942560 x 1440</p></li></ol><p>  ‍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hello，大家好，这期我来给大家讲一下如何在 next cloud 云盘中挂载本机的目录。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;我们打开 zimaos，应用商店搜索 Next Cloud 安装；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开文件，选择一个我们想要去映射的文件夹，我选</summary>
      
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="折腾日记" scheme="https://childeyouyu.github.io/tags/%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/"/>
    
    <category term="好玩的 Linux" scheme="https://childeyouyu.github.io/tags/%E5%A5%BD%E7%8E%A9%E7%9A%84-Linux/"/>
    
  </entry>
  
  <entry>
    <title>2023 年终总结</title>
    <link href="https://childeyouyu.github.io/posts/fef3.html"/>
    <id>https://childeyouyu.github.io/posts/fef3.html</id>
    <published>2024-01-01T16:13:58.000Z</published>
    <updated>2024-10-01T00:10:10.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我在过往也一直有写年度回顾的习惯，一般是在元旦后的几个星期里，或是在上半年的某一天突然想起来，然后决定开始写一篇年度回顾。</p><p>通常我的内容是从上一年元旦开始一整年的生活，记得住的大事件，或是凭借蛛丝马迹的回忆，从 17 年至今，年年如此。</p><p>今年在 Find Blog 看到从不同方面回顾过去一年，然后再记录最骄傲的成就、最大的挑战、明年最主要的愿望这一带有目的的主题回顾，不免有些新奇，决定参与一次。</p><p>开始之前，我也加上一句对 2023 年年末这几天的简单概述：七零八碎，一地鸡毛，最后又绝处逢生，不同的地方都有了新的开始，面对下一年的是百废待兴。正在此时，我开始我的年度回顾和新年展望。</p><h1 id="健康-锻炼"><a href="#健康-锻炼" class="headerlink" title="健康&#x2F;锻炼"></a>健康&#x2F;锻炼</h1><p>今年的健康状况其实算是历年都比较差，三月份在甲流肆虐的时间里，几次都感到身体不舒服，最后在室友沦陷的日子里，我还是倒下了。</p><p>后来的一年倒是平安顺遂，悠然的结束了这一整年。</p><p>在去年的年末，随着一份文件的下达，校园跑开始了，说实话这个东西很大程度上消磨了我跑步的热情，让人大有一种“我可以想跑步，但不能是因为你强迫我。”，于是今年的跑步也就只有那么几次，或有十几公里的样子，下半年更加的怠惰起来。</p><h1 id="工作与职业"><a href="#工作与职业" class="headerlink" title="工作与职业"></a>工作与职业</h1><p>今年的一整年，是在飘摇中度过的，年初对于考研和工作的选择，直到某一天终于下定了决心扔下全部复习资料，决定开始找工作。</p><p>自从暑假开始，直到十二月这么长的日子里，有过两次实习，大多数时间都是在无所事事和被无聊的事耽搁，总之是面试了十多家，最后也没拿到满意的 offer。</p><p>最后在现在的实习公司留下，打算就这么一直干下去了。</p><h1 id="个人生活与家庭"><a href="#个人生活与家庭" class="headerlink" title="个人生活与家庭"></a>个人生活与家庭</h1><p>说实在的，个人生活逐渐的丰富起来，我还总是记得大学四年，每年在不同的地方，因为不同的境遇遇到的不同的社交圈子，我拓展、熟识，又舍弃，最后所遗留的朋友却不多。</p><p>今年终于算是卸下了社团的活动，于是又和很多人彻底告别。</p><p>十月份回了一次家里，回来后与宿舍的同学也基本没了什么交流。</p><p>几天前，和家里面会联系的姐姐弟弟都联系了个遍，去感受自己和世界的羁绊，又约了在学校还联系的两个朋友。</p><p>总的来说，在社交这里，我的一级朋友又缺失了一个，但剩下的关系到依然很好。</p><h1 id="学习和知识管理"><a href="#学习和知识管理" class="headerlink" title="学习和知识管理"></a>学习和知识管理</h1><p>直到 11 月，我才后知后觉，过度使用 Chat GPT 对个人而言危害巨大，尤其是我现在正处于学习阶段，对于代码的掌控能力直线下降。</p><p>忙里忙慌的去大模型化，只有很熟悉的领域才敢交给大模型去做。</p><p>在知识管理这里，我终于确定选择好了工具，过去几年用过太多：语雀、微秘、Logseq、黑曜石、思源笔记、幕布。</p><p>我对笔记有天然的不信任，语雀的运营让我很惊慌，思源笔记又没有良好的同步性，手机、电脑、公司的文档始终是不能完全同步。</p><p>思源笔记的 S3 推出以后，我再次下载了这个老伙计，网络上关于开发者的争议我倒是不太在乎，于是尝试了一段时间，我付费购买了永久的功能特性以使用 S3 同步功能，也慢慢的将我的数据迁移过来。</p><h1 id="旅游与文化"><a href="#旅游与文化" class="headerlink" title="旅游与文化"></a>旅游与文化</h1><p>大概的盘算了一下，今年没有去什么远处旅游，只是无聊就跑一次西湖，算下来应该也有个七八次？</p><p>一年里最值得纪念的活动一是五月份去看氧气音乐节，看到了毛不易；十一月去慈溪，参加卢思浩的读者见面会，这是我第二次去看他的见面会，搭车、寻路、买书、入场、听他讲故事，也留下自己的故事。</p><p>今年读书还不错，在纸间书摘上面的记录是 17 本，和 2022 持平，当然也藏进去基本消遣的网文，这一年开始偏爱推理小说，看了两本东野圭吾做消遣之后，去看江户川乱步、松本清张，还把《无人生还》的电影、小说都看了一遍。</p><p>年末趁着各种活动，买了很多书，从《山海经》到《镜花缘》，老舍作品和鲁迅小说集，想起来高中时从同学那里借来的鲁迅文集，毕业归还时竟然也看完了半本。</p><p>网络文学作品也偶尔带来一些惊喜，像是我高一读《择天记》时的惊喜一样，断断续续读了几年，我终于读完了《修真四万年》，竟然也收获颇丰，带着修仙、修真大道之争的主线，一路上却讨论了不知道多少深刻的社会运行模式，以至于有很长一段时间，和人聊起小说，都是以《修真四万年》开场。</p><h1 id="兴趣和创造"><a href="#兴趣和创造" class="headerlink" title="兴趣和创造"></a>兴趣和创造</h1><p>今年的兴趣没什么大的变化，还是会常常读书、不时下一下象棋、偶尔买一份积木  DIY。</p><p>程序设计文件夹里新建了一个又一个小程序的设计思路，囿于能力等待着实现的时间。年末终于开始动手去写，目前写完了第二个，等待着完善后发出来。</p><p>折腾了很久，终于开始正式的运营自己的博客，折腾了几个 Hexo 的主题，选一个自己喜欢的，买了一个 玩客云的小主机玩了几天又转手出去，从学长的手里买一个性能更好的 x86 小主机，搞了一个自己的 nas，做了相册的备份，其他功能则是继续探索。</p><p>偶尔也买一个游戏玩，不过多的时候还是在模拟器或玩玩学习版，十月后忽然心血来潮，看了几天买回来一个 NS，玩了一个月的《火焰纹章 风花雪月》，而后又转手出去，也算是终于体验了一次主机玩家的乐趣，不过卡带倒是不太好卖，还留在自己的柜子里。</p><h1 id="情绪-精神状态"><a href="#情绪-精神状态" class="headerlink" title="情绪&amp;精神状态"></a>情绪&amp;精神状态</h1><p>今年有那么一段时间，我的精神状态是很不好的，那段时间女朋友深陷抑郁症的折磨，我常常在陪她伤心难过后，感叹为什么世界对人为何不带有一丝怜悯。</p><p>我在二月份时写完了整个 22 年的回顾日记，相比之下，大二是轻松的，于是看上去也要有趣的多。</p><h1 id="财务总结"><a href="#财务总结" class="headerlink" title="财务总结"></a>财务总结</h1><p>关于这一年的财务状况，最该说的是花呗，我曾在去年短暂的清空了花呗的借款，一次出行计划又打破了平衡，关闭花呗的计划就又搁浅了下来，今年二月和三月，吃了许久挂面的情况下，彻底的清算了全部的账单，后面的财务依旧是生活费的月光，身上也感觉到了轻松，后来看到了花呗开始与征信挂钩。</p><p>今年最开心的部分其实也在于此，我开始逐渐有了工资，七八月份实习的公司，财务搞错了状况，让我的花销也没控制好，最后也没能存下些钱。拿了第一份工资，给家里人去买些礼物，主要是给爸爸买了一个飞利浦的筋膜枪，希望可以缓解他的背部疼痛。</p><p>十二月以后，新的公司开始提供实习工资，我的房租、生活费再次有了保障。</p><hr><h1 id="最骄傲的成就"><a href="#最骄傲的成就" class="headerlink" title="最骄傲的成就"></a>最骄傲的成就</h1><p>今年给我感受最好的一件事是在三月，某室友再次请教我一道 matlab 编程的问题，找到了我 22 年 12 月 30 日写的一份代码，当时的代码巧妙发挥了索引的作用，让程序不多一个变量，原来自己也写过这么漂亮二代码。</p><h1 id="最大的挑战"><a href="#最大的挑战" class="headerlink" title="最大的挑战"></a>最大的挑战</h1><p>在放弃了考研后，目标就变成了找工作，忽而间，我的大学同学与我大多断了联系，我开始游走在学校以外的地方，找工作、探索创业。</p><h1 id="24-年的规划"><a href="#24-年的规划" class="headerlink" title="24 年的规划"></a>24 年的规划</h1><p>新的一年没什么大的志向，认真的做完毕业设计，平平安安的结束我的大学生活。</p><p>春招时再去碰碰运气，能不能找到一份更好工作。</p><p>第一年或许不会有太多的工资，就一为家人添置些礼物，达成给女友的承诺，买一部小米 15 作为礼物。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我在过往也一直有写年度回顾的习惯，一般是在元旦后的几个星期里，或是在上半年的某一天突然想起来，然后决定开始写一篇年度回顾。&lt;/p&gt;
&lt;p&gt;通</summary>
      
    
    
    
    <category term="追求本我" scheme="https://childeyouyu.github.io/categories/%E8%BF%BD%E6%B1%82%E6%9C%AC%E6%88%91/"/>
    
    
    <category term="年终总结" scheme="https://childeyouyu.github.io/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>AHK 上手以及编辑器配置</title>
    <link href="https://childeyouyu.github.io/posts/65a0.html"/>
    <id>https://childeyouyu.github.io/posts/65a0.html</id>
    <published>2023-12-30T08:18:44.000Z</published>
    <updated>2024-01-04T15:58:57.565Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近要写一点简短的小东西，想起了以前加入过的一个脚本语言社区，名字是 AutoHotKey，应该可以满足我的需求，花费了半个小时搞定环境和编辑器，主要是安装路径出了一点问题。</p><h1 id="AHK-介绍以及安装"><a href="#AHK-介绍以及安装" class="headerlink" title="AHK 介绍以及安装"></a>AHK 介绍以及安装</h1><p>Chris Mallett，这个人在 2003 年 11 月发布了 AHK 的第一个版本，经过数年的完善，在（08 年）Lexikos 等人的帮助下，发布了经典版本：1.0.48.05。</p><p>2011 年开始社区主要开始由 Lexikos 主导，并开发 AutoHotkey v2-alpha 至今。</p><p>通常情况下，大家更支持使用经典的版本，不过我这人就喜欢玩新的，于是果断下载了最新版。</p><p>目前的官网：<a href="https://www.autohotkey.com/">www.autohotkey.com</a></p><h1 id="编辑器选择以及坑"><a href="#编辑器选择以及坑" class="headerlink" title="编辑器选择以及坑"></a>编辑器选择以及坑</h1><p>其实我还是比较喜欢每个语言都有自己的编辑器的，Java 就用 IDEA，Python 使用 Pycharm，但是扫了一眼目前大家推荐的编辑器还是挺丑的，就算了，还是老老实实用 vscode 吧。</p><p>下载 ahk、安装 vscode、应用商店搜索 AutoHotkey，一气呵成，写下第一个脚本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">运行失败</span><br></pre></td></tr></table></figure><p>嗯，看一下报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(哦，忘记截图了）</span><br></pre></td></tr></table></figure><p>大概就是 C 盘位置没有找到 ahk 文件，那应该是默认安装位置。</p><p>于是打开设置，选择拓展，果然找到了相关选项：</p><p><img src="https://pic.ziyuan.wang/user/Knoll9337/2023/12/1703924462437_6e1c2926469a7.png" alt="1703924462437.png"></p><p>果断改成我的安装路径，重新运行。</p><p><img src="https://pic.ziyuan.wang/user/Knoll9337/2023/12/1703924515162_63bcb3da1f332.png" alt="1703924515162.png"></p><p>果断成功。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>下载 AHK：<a href="https://www.autohotkey.com/">官网</a></li><li>下载安装 vscode</li><li>搜索拓展 AutoHotkey，选择 AutoHotkey v2 Language Support 或者 AutoHotkey Plus Plus，打开设置–&gt;拓展位置，选中对应拓展。<ol><li>如果是 AutoHotkey v2 Language Support<ol><li><img src="https://pic.ziyuan.wang/user/Knoll9337/2023/12/1703924462437_6e1c2926469a7.png" alt="1703924462437.png"></li></ol></li><li>如果是 AutoHotkey Plus Plus 选项有点多，对应着都改一下。<ol><li><img src="https://pic.ziyuan.wang/user/Knoll9337/2023/12/1703924559058_ac2b847e31e2c.png" alt="1703924559058.png"></li></ol></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近要写一点简短的小东西，想起了以前加入过的一个脚本语言社区，名字是 AutoHotKey，应该可以满足我的需求，花费了半个小时搞定环境和编</summary>
      
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="AHK" scheme="https://childeyouyu.github.io/tags/AHK/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda 使用的几个点</title>
    <link href="https://childeyouyu.github.io/posts/ae8e.html"/>
    <id>https://childeyouyu.github.io/posts/ae8e.html</id>
    <published>2023-12-05T15:38:18.000Z</published>
    <updated>2024-01-04T15:59:08.691Z</updated>
    
    <content type="html"><![CDATA[<p>最近工作需要，重新配置了 Anaconda，过程中出现了些许问题，特此做个记录和汇总。</p><h1 id="1-系统环境配置"><a href="#1-系统环境配置" class="headerlink" title="1. 系统环境配置"></a>1. 系统环境配置</h1><p><code>Win + S</code>搜索 env –&gt; 编辑系统环境变量 –&gt; 环境变量。</p><p>在 Path 中新建三个系统环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">① anaconda 安装的目录 D:\anaconda</span><br><span class="line"></span><br><span class="line">② anaconda/scripts 的目录 D:\anaconda\Scripts</span><br><span class="line"></span><br><span class="line">③ bin 的目录 D:\Download\anaconda\Scripts\Library\bin</span><br></pre></td></tr></table></figure><blockquote><p>PS：在安装时勾选添加anaconda3 到PATH就会自动配置了。</p><p><img src="/assets/image-20231205232514-ounax5i.png" alt="image"></p></blockquote><h1 id="2-Pycharm-识别"><a href="#2-Pycharm-识别" class="headerlink" title="2. Pycharm 识别"></a>2. Pycharm 识别</h1><p>配置好了后，我的pycharm还是识别不到conda的可执行文件，新建环境，选择conda，conda安装文件夹bin文件下面的conda.bat 文件。</p><p>后面遇到其他情况我再进行补充。</p><h1 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h1><h2 id="查看conda版本："><a href="#查看conda版本：" class="headerlink" title="查看conda版本："></a>查看conda版本：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><h2 id="创建新环境："><a href="#创建新环境：" class="headerlink" title="创建新环境："></a>创建新环境：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name 环境名 python=python版本（3.12）</span><br></pre></td></tr></table></figure><h2 id="删除环境："><a href="#删除环境：" class="headerlink" title="删除环境："></a>删除环境：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name envname --all</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近工作需要，重新配置了 Anaconda，过程中出现了些许问题，特此做个记录和汇总。&lt;/p&gt;
&lt;h1 id=&quot;1-系统环境配置&quot;&gt;&lt;a href=&quot;#1-系统环境配置&quot; class=&quot;headerlink&quot; title=&quot;1. 系统环境配置&quot;&gt;&lt;/a&gt;1. 系统环境配置&lt;</summary>
      
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Windows" scheme="https://childeyouyu.github.io/tags/Windows/"/>
    
    <category term="Python" scheme="https://childeyouyu.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Java 中文乱码问题 - 2021 年困扰我的万恶之源</title>
    <link href="https://childeyouyu.github.io/posts/4d37.html"/>
    <id>https://childeyouyu.github.io/posts/4d37.html</id>
    <published>2023-11-22T03:13:15.000Z</published>
    <updated>2024-01-04T15:59:13.939Z</updated>
    
    <content type="html"><![CDATA[<p>2021 年，我选了一门名为《高级编程技术》的课，课程内容是 Java 编程，我很感兴趣，彼时我使用最新的 JDK 18，以及 IDEA。</p><p>我遇到了一点小小的问题，控制台输出的文字永远是乱码，网络上的三五种方法尝试了许久也不能解决。</p><p>时隔一年发现，或许是 JDK 18 与 IDEA 之间有些不可调和的矛盾，于是改用了 JDK 17。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021 年，我选了一门名为《高级编程技术》的课，课程内容是 Java 编程，我很感兴趣，彼时我使用最新的 JDK 18，以及 IDEA。&lt;/p&gt;
&lt;p&gt;我遇到了一点小小的问题，控制台输出的文字永远是乱码，网络上的三五种方法尝试了许久也不能解决。&lt;/p&gt;
&lt;p&gt;时隔一年发现</summary>
      
    
    
    
    <category term="探索互联网" scheme="https://childeyouyu.github.io/categories/%E6%8E%A2%E7%B4%A2%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="技术" scheme="https://childeyouyu.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Java" scheme="https://childeyouyu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>计量的几处风景</title>
    <link href="https://childeyouyu.github.io/posts/e7fe.html"/>
    <id>https://childeyouyu.github.io/posts/e7fe.html</id>
    <published>2023-11-11T15:18:42.000Z</published>
    <updated>2024-01-04T15:57:30.237Z</updated>
    
    <content type="html"><![CDATA[<p>三月的一个晚上，在九号楼后面的小路上偶遇一只小小的橘猫，看起来年纪不大的样子，声音有些沙哑的在我身边蹭着，像是寻觅着实物，彼时还有供人喂猫的公益猫粮，我取了些许递给他。</p><p>它等待着，却没有吃。向更黑的树林里呼唤着，叫来了他的同伴，更加胆小的小猫，他们躲在黑暗里，向路人卖力的展示自己作为猫咪的可爱之处。</p><p>我说：“你们来这边，七号楼的女学生们最爱喂猫了。”</p><p>后来看着两只小猫日渐有了精神，也变得健康了些。</p><p>大约一个月后，我听闻生活区里有一只橘猫被撞死了，女友说正是那晚讨好我们的小橘猫。</p><hr><p>在日月湖的两侧，一侧有一群大白鹅聚众嬉戏，或是一头扎进水里，扬起一片水花；在小桥的另外一侧，是一只灰鹅，或是被欺负，或是出了其他的意外，腿卡在翅膀中间，失去了平衡，只能在小小的区域里转圈圈。</p><hr><p>一日在体育馆上完了课，看着朋友几分钟前发来消息说快来六楼，看今天的晚霞。</p><p>我匆匆跑上楼去，将手上的东西随手丢在了路过的桌子上，来不及等电梯。</p><p>但是只能看到一抹残阳，我静静的看着夕阳消散，夜幕降临。慨叹夕阳无限好。</p><hr><p>暑假时在校外租了房子，出去实习。</p><p>偶尔回到学校见见朋友拿些东西，只看寝室逐渐变空，约到的朋友越来越少，直到凑不齐一桌麻将，我再看生活区长长的路，开始觉得它无比的陌生。</p><p>怪不得我见不到几位大四的学长学姐，到了此时校园就变得无聊起来了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;三月的一个晚上，在九号楼后面的小路上偶遇一只小小的橘猫，看起来年纪不大的样子，声音有些沙哑的在我身边蹭着，像是寻觅着实物，彼时还有供人喂猫的公益猫粮，我取了些许递给他。&lt;/p&gt;
&lt;p&gt;它等待着，却没有吃。向更黑的树林里呼唤着，叫来了他的同伴，更加胆小的小猫，他们躲在黑暗里，</summary>
      
    
    
    
    <category term="何不看世界" scheme="https://childeyouyu.github.io/categories/%E4%BD%95%E4%B8%8D%E7%9C%8B%E4%B8%96%E7%95%8C/"/>
    
    
    <category term="随笔" scheme="https://childeyouyu.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="看世界" scheme="https://childeyouyu.github.io/tags/%E7%9C%8B%E4%B8%96%E7%95%8C/"/>
    
    <category term="校园风光" scheme="https://childeyouyu.github.io/tags/%E6%A0%A1%E5%9B%AD%E9%A3%8E%E5%85%89/"/>
    
  </entry>
  
</feed>
