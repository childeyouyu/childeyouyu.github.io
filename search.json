[{"title":"近况和未来一段时间的展望","path":"/posts/22044.html","content":"最近一段时间，技术切换比较频繁。 Arduino十月末开始，有一位打游戏的搭子找到了我，说是有一些想法，开始研究一些关于嵌入式的东西，搞来了一些arduino、tft屏幕、语音芯片之类的小玩应，以前我在宿舍的时候，曾经看到过我的大学室友学习这些东西；但一切从零开始不是一件容易的事情，我研究了几次不得要领，二搭子也开始忙碌，我便请教了一位校园里的朋友帮我继续这件事，明天或许要再进行一些沟通。 PySide6《纸间书摘》对应程序的开发已经完成，我的用户很给力，上线后立刻给予了第一份捐赠，我想这个程序也就到此为止了，毕竟没什么宣传渠道。 Compose结束了Python开发，工作中心正式到了安卓上，昨天下午加班结束后，开始在公司摸鱼学习一份新的技术，compose，相比于以往的《第一行代码》，谷歌的教程更加的让人心动，它实在是太优雅了，但可惜第二章之后这样优秀的教程似乎就结束了，后面的部分还要找一些其他的教程来学习。 学习中，我的新项目《语待办》也可以一起做起来了，语待办命运多舛，我为了他思考过PySide6、Flet、Flutter这些不同的技术方案，都觉得差点意思，现在真心觉得Compose是一个很好的方案。","tags":["随笔","周记"],"categories":["追求本我"]},{"title":"笔记-SSH 配置","path":"/posts/14641.html","content":"记录关于ssh链接到github的命令。 前置教程在windows上安装scoop。 正式开始 安装git 1scoop install git 生成ssh key 1ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot; 替换自己的邮箱地址，回车直到结束。 将公钥添加到github 验证是否成功 1ssh -T git@github.com","tags":["技术"],"categories":["探索互联网"]},{"title":"最近的变化","path":"/posts/25708.html","content":"最近给自己规划了许多小软件，不久之前纸间书摘的用户找到我希望可以更新三月时写的一个程序，花费了两个星期一边学习PySide6,一边完善了软件的功能，很开心。","categories":["何不看世界"]},{"title":"PySide6开发日记（二）","path":"/posts/23589.html","content":"笔记二 富文本格式关于设置文字自动换行以及问题：纯数字时自动换行不起作用。 123456# 设置文字为富文本格式，字体大小16ptbook_name_label = QLabel( f&quot;&lt;span style=&#x27;font-size:16pt&#x27;&gt;&#123;book_name&#125;&lt;/span&gt;&quot; )# 设置自动换行book_name_label.setWordWrap(True) 一些问题：如果文字是纯数字将不起作用。 笔记三 滚动布局设置滚动布局： 1234567891011area = QScrollArea()widget_area = QWidget()# 注1area.setWidgetResizable(True)layout_area = QVBoxLayout(widget_area)layout_area.addStretch(1)area.setWidget(widget_area) 注1：处理坑，子控件大小和area不一致，设置area的属性。 笔记四 分割线 分割线 12345# 设置一个分割线frame = QFrame()frame.setFrameShape(QFrame.Shape.HLine) # 设置为水平分割线frame.setLineWidth(1) # 设置分割线宽度为1像素layout_area.addWidget(frame) 分割用的矩形 可以用来填充界面。 123456789101112131415# 创建QFrameframe = QtWidgets.QFrame(self)frame.setFrameShape(QtWidgets.QFrame.StyledPanel)frame.setFrameShadow(QtWidgets.QFrame.Raised)# 设置尺寸策略为自动扩充sizePolicy = QtWidgets.QSizePolicy( QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)frame.setSizePolicy(sizePolicy)frame.setFrameShape(QtWidgets.QFrame.NoFrame)# 设置QFrame背景为透明frame.setAttribute(QtCore.Qt.WA_TranslucentBackground)layout.addWidget(frame) 补充本来以为这个系列可以出很多期，结果现在的项目很快也就写完了，PySide6还有很多不完善的地方，我又开始纠结犹豫，和《纸间书摘》的开发者聊了之后他推荐给我一套新的技术栈，这周终于有时间看了一下，基于compose的安卓开发比以往容易了许多，kotlin+compose终于变得优雅起来了，相比之下感觉比flutter更让人心动？ 总之开始学习起来了。","tags":["python","PySide6","周记"],"categories":["探索互联网"]},{"title":"PySide6开发日记（一）","path":"/posts/52319.html","content":"PySide6开发日记（一）前言 今年早些时候，为国产读书书摘记录软件做了一个api导入程序，第一版发布后有两个用户，但后面就没关注这个程序了，半个月之前其中一位用户向我询问能否为程序增加一些新的功能，就此我开始程序v0.2版本的开发。 程序名字是《merpyzf_pyside6》，顾名思义，技术栈是PySide6，于是继续一边学习一边写新功能，目前来看新版本开发会持续几周，索性就当作周记，每周记录自己的学习心得。 笔记一：程序的顶部状态栏1. 隐藏系统状态栏 虽然暂时没有打算做Mac OS和Linux版本，但是Windows的系统UI已经让我大为不爽了，于是开始研究无边框模式，搜到了许多教程，但实测下来能用的确实都有各种各样的问题。 最后连带AI和各种资料总算是写出了我需要的代码。 1234567891011121314151617181920from PySide6.QtCore import *from PySide6.QtGui import *from PySide6.QtWidgets import *if __name__ == &#x27;__main__&#x27;: app = QApplication([]) window = QMainWindow() window.setWindowTitle(&#x27;隐藏系统状态栏&#x27;) window.resize(400, 300) layout = QVBoxLayout(window) label = QLabel(&#x27;这是一个无状态栏示例&#x27;) layout.addWidget(label) # 隐藏状态栏 window.setWindowFlag(Qt.WindowType.FramelessWindowHint) window.show() app.exec() 核心部分就是setWindowFlag​。起初我在网络上查找相关代码时看到了许多教程，但是当我尝试导入Qt时，显示在QtCore、QtGui类下都存在Qt库，便一直没能成功，最后索性使用*​进行导入。 2. 设置最大化，最小化以及关闭程序按钮，并放置在合适的位置 三个按钮很好搞定，QPushbutton+icon属性就搞定了。 我想到可以用菜单栏用于放置它们，PySide6中当然也有相关的功能，QToolBar组件。 于是第一版程序很快就写出来了： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758from PySide6.QtGui import *from PySide6.QtWidgets import *def window_max(): ...if __name__ == &quot;__main__&quot;: app = QApplication([]) window = QMainWindow() window.setWindowTitle(&quot;隐藏系统状态栏&quot;) window.resize(400, 300) widget_center = QWidget() layout = QVBoxLayout(widget_center) label = QLabel(&quot;这是一个无状态栏示例&quot;) layout.addWidget(label) # 隐藏状态栏 window.setWindowFlag(Qt.WindowType.FramelessWindowHint) toolbar = QToolBar() # 设置工具栏不可移动 toolbar.setMovable(False) # 填充工具栏左侧，让三个按钮被放置到最右侧 widget_fill = QWidget() toolbar.addWidget(widget_fill) layout_toolbar = QHBoxLayout(widget_fill) layout_toolbar.addStretch() # 设置三个按钮，并将其设置为图片形式 btn_min = QPushButton(icon=QIcon(&quot;assets/min.svg&quot;)) btn_max = QPushButton(icon=QIcon(&quot;assets/icon-max.svg&quot;)) btn_close = QPushButton(icon=QIcon(&quot;assets/close.svg&quot;)) # 去除按钮边框 btn_min.setFlat(True) btn_max.setFlat(True) btn_close.setFlat(True) # 将按钮放置在toolbar上 toolbar.addWidget(btn_min) toolbar.addWidget(btn_max) toolbar.addWidget(btn_close) # 为按钮增加功能，其中最大化按钮需要额外函数进行修饰 btn_min.clicked.connect(window.showMinimized) btn_max.clicked.connect(lambda: window_max()) btn_close.clicked.connect(window.close) # 将toolbar放置到window上 window.addToolBar(toolbar) window.setCentralWidget(widget_center) window.show() app.exec() 运行效果： ​​ 3 窗口拖动 隐藏窗口一时爽，隐藏以后动不了，当我发现窗口开始变得不能移动后人都傻掉了，只好开始寻找方法。 处理方法也不难，当我发现PySide6中存在三个函数（mousePressEvent​、mouseMoveEvent​、mouseReleaseEvent​）后，这件事就变得简单起来。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990from PySide6.QtGui import *from PySide6.QtWidgets import *class QMainWindow(QMainWindow): def __init__(self): super().__init__() def mousePressEvent(self, event): # 当鼠标按钮被按下时调用此函数 if event.button() == Qt.LeftButton: self._move_drag = True self.cursor_win_pos = event.globalPosition() - self.pos() event.accept() def mouseMoveEvent(self, event): # 当鼠标移动时调用此函数 # 如果鼠标左键被按下并且可以拖动窗口 if Qt.LeftButton and self._move_drag: m_Point = ( event.globalPosition() - self.cursor_win_pos ) # 计算新的鼠标全局坐标与初始位置的差值 self.move(int(m_Point.x()), int(m_Point.y())) # 根据差值移动窗口到新的位置 event.accept() # 接受事件，不再传递 def mouseReleaseEvent(self, event): # 鼠标按键释放时,取消移动 self._move_drag = False event.accept() def window_max(self): if self.isMaximized(): self.showNormal() else: self.showMaximized()if __name__ == &quot;__main__&quot;: app = QApplication([]) window = QMainWindow() window.setWindowTitle(&quot;隐藏系统状态栏&quot;) window.resize(400, 300) window._move_drag = False widget_center = QWidget() layout = QVBoxLayout(widget_center) label = QLabel(&quot;这是一个无状态栏示例&quot;) layout.addWidget(label) # 隐藏状态栏 window.setWindowFlag(Qt.WindowType.FramelessWindowHint) toolbar = QToolBar() # 设置工具栏不可移动 toolbar.setMovable(False) # 填充工具栏左侧，让三个按钮被放置到最右侧 widget_fill = QWidget() toolbar.addWidget(widget_fill) layout_toolbar = QHBoxLayout(widget_fill) layout_toolbar.addStretch() # 设置三个按钮，并将其设置为图片形式 btn_min = QPushButton(icon=QIcon(&quot;assets/min.svg&quot;)) btn_max = QPushButton(icon=QIcon(&quot;assets/icon-max.svg&quot;)) btn_close = QPushButton(icon=QIcon(&quot;assets/close.svg&quot;)) # 去除边框 btn_min.setFlat(True) btn_max.setFlat(True) btn_close.setFlat(True) # 将按钮放置在toolbar上 toolbar.addWidget(btn_min) toolbar.addWidget(btn_max) toolbar.addWidget(btn_close) # 为按钮增加功能，其中最大化按钮需要额外函数进行修饰 btn_min.clicked.connect(window.showMinimized) btn_max.clicked.connect(lambda: window.window_max()) btn_close.clicked.connect(window.close) # 将toolbar放置到window上 window.addToolBar(toolbar) window.setCentralWidget(widget_center) window.show() app.exec() 不过今天在写博客时，我发现了一个新的办法，不需要重写这三个方法，看起来更加的简洁实用： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475from PySide6.QtGui import *from PySide6.QtWidgets import *class QMainWindow(QMainWindow): def __init__(self): super().__init__() def window_max(self): if self.isMaximized(): self.showNormal() else: self.showMaximized() def move_title_bar(self, event): self.windowHandle().startSystemMove()if __name__ == &quot;__main__&quot;: app = QApplication([]) window = QMainWindow() window.setWindowTitle(&quot;隐藏系统状态栏&quot;) window.resize(400, 300) window._move_drag = False widget_center = QWidget() layout = QVBoxLayout(widget_center) label = QLabel(&quot;这是一个无状态栏示例&quot;) layout.addWidget(label) # 隐藏状态栏 window.setWindowFlag(Qt.WindowType.FramelessWindowHint) toolbar = QToolBar() # 设置工具栏不可移动 toolbar.setMovable(False) # 填充工具栏左侧，让三个按钮被放置到最右侧 widget_fill = QWidget() toolbar.addWidget(widget_fill) layout_toolbar = QHBoxLayout(widget_fill) layout_toolbar.addStretch() # 设置三个按钮，并将其设置为图片形式 btn_min = QPushButton(icon=QIcon(&quot;assets/min.svg&quot;)) btn_max = QPushButton(icon=QIcon(&quot;assets/icon-max.svg&quot;)) btn_close = QPushButton(icon=QIcon(&quot;assets/close.svg&quot;)) # 去除边框 btn_min.setFlat(True) btn_max.setFlat(True) btn_close.setFlat(True) # 将按钮放置在toolbar上 toolbar.addWidget(btn_min) toolbar.addWidget(btn_max) toolbar.addWidget(btn_close) # 为按钮增加功能，其中最大化按钮需要额外函数进行修饰 btn_min.clicked.connect(window.showMinimized) btn_max.clicked.connect(lambda: window.window_max()) btn_close.clicked.connect(window.close) # 将toolbar放置到window上 window.addToolBar(toolbar) window.setCentralWidget(widget_center) toolbar.mouseMoveEvent = window.move_title_bar window.show() app.exec() 其实核心部分只有以下两点： 12def move_title_bar(self, event): self.windowHandle().startSystemMove() 1toolbar.mouseMoveEvent = window.move_title_bar 不仅实现了移动，而且只有光标在toolbar上时才会执行，更加符合使用习惯了吧哈哈哈。 未完事项 实现拖动边框进行窗口的大小设置； ‍","tags":["python","PySide6","周记"],"categories":["探索互联网"]},{"title":"新电脑：因为在此电脑上禁止运行脚本 问题的解决","path":"/posts/59813.html","content":"问题的发生问题发生于使用.ps1下载 Windows 镜像时，总是会弹出的错误： 123456无法加载文件 C:\\Users\\youyu\\Download\\Fido.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。+ CategoryInfo : SecurityError: (:) []，ParentContainsErrorRecordException+ FullyQualifiedErrorId : UnauthorizedAccess 问题出现的原因问题描述也很清楚，于是就上网搜一下解决方案。原因在于： 12345678Restricted 执行策略不允许任何脚本运行。 AllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。 本主题说明如何运行所选未签名脚本（即使在执行策略为 RemoteSigned 的情况下），还说明如何对 脚本进行签名以便您自己使用。有关 Windows PowerShell 执行策略的详细信息，请参阅 about_Execution_Policy。 进一步确保相关设置是否像问题描述所说的一样可以输入get-executionpolicy 如果运行结果为： 12get-executionpolicyRemoteSigned 就不是相关原因造成的，可以关闭文章找其他办法了。 解决方案如果不是就打开 PowerShell（管理员身份），输入： 1set-executionpolicy remotesigned 在继续选项中输入 Y。 Finished！","tags":["技术","Windows","命令行"],"categories":["探索互联网"]},{"title":"SQLite 数据类型","path":"/posts/36818.html","content":"SqliteSQLite 是一个让人喜欢的不得了的数据库，对于我个人而言，没有大量数据需要处理，从来没有过一定要使用 MySQL 或者是 PostgreSQL 的场景。 数据类型记录 存储类 描述 NULL 值是一个 NULL 值。 INTEGER 值是一个带符号的整数，根据值的大小存储在 1、2、3、4、6 或 8 字节中。 REAL 值是一个浮点值，存储为 8 字节的 IEEE 浮点数字。 TEXT 值是一个文本字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储。 BLOB 值是一个 blob 数据，完全根据它的输入存储。","tags":["技术"],"categories":["探索互联网"]},{"title":"使用 RSS 来保护隐私和提高效率-(翻译)","path":"/posts/1066.html","content":"原文地址 https://rsapkf.org/weblog/rss 社交媒体网站充斥着广告、跟踪器和欺骗模式。尽管出于隐私原因或时间考虑，我很想避免使用它们，但如果没有它们，就不可能跟上时事。 RSS（“真正简单的聚合”）给你两全其美。对于门外汉来说，这是一种不必单独浏览它们或注册社交媒体的“订阅”网站的方式。通过 RSS 提要的集合，您可以从提要阅读器中了解来自多个源（提供 RSS 提要）的最新更新。 提供私人&#x2F;公共 RSS 提要的流行网站包括 GitHub，YouTube，Reddit 和 Stack Overflow。也有很多方法可以为 Twitter 和 Instagram 等其他网站获取 RSS 提要。在本文档中，除了如何使用和管理 RSS 订阅之外，我还想提出一个总体的一般隐私提示，通过访问 Reddit 和 YouTube 等社交媒体网站的隐私保护替代前端来减少您的数字足迹。 将所有内容迁移到 RSS这可能听起来有点自私，但我已经停止订阅&#x2F;关注任何在线的东西&#x2F;任何人。当一个网站上的每一次互动都被跟踪并用于销售你的数据和提供有针对性的广告时，我不认为这是令人惊讶的。 我用我的 RSS 阅读器。没有必要登录 YouTube 和“订阅”频道来查看我最喜欢的频道的新上传或“加入”subreddits 来跟上 Reddit 上的热门帖子，或“关注”Twitter 上的帐户。这些都是可以用一个好的提要阅读器来管理的事情。有优秀的开源解决方案来管理各种平台的提要： 博客和基于文本的网站的 Newsboat Newsboat 是一个 *nix 系统的命令行提要阅读器，它可以从纯文本文件中读取提要列表。它提供了一个强大的语法来管理标签&#x2F;文件夹，自定义标题，提要集合，创建过滤列表等。 NewPipe for YouTube NewPipe 是一个第三方 Android 应用程序，允许您直接从 Google Takeout 提供的 subscriptions.csv 导入订阅。您还可以添加更多订阅，保存&#x2F;创建播放列表，创建自定义频道组并在本地保存它们，而无需使用 YouTube 的界面。 其他提供类似功能的应用程序是 Android 版的 LibreTube 和桌面版的 FreeTube。 PS: 推荐中国宝宝使用 PipePipe, 一个基于 NewPipe 开发的开源软件，加入了对哔哩哔哩的支持。 用于播客的 Advertising Pod 除了无广告体验外，它还提供了使用 gPodder 帐户在线同步提要的功能。 所有这些应用程序都支持导入&#x2F;导出，因此您可以始终控制数据。 有基于云的服务来管理您的列表，如 Newsblur，Quite RSS，Inoreader 或 Feedly 以及自托管解决方案，如 TinyTiny RSS 或 Fresh RSS。 一些网站如 YouTube 仍然支持 RSS 提要，而其他网站如 Twitter 则不支持。本节记录了各种流行平台的 RSS 提要的直接链接。使用这些技巧来创建您自己的收藏或使用像这样的预制收藏。 Hacker News 首页：news.ycombinator.com&#x2F;rss 显示 HN：news.ycombinator.com&#x2F;showrss hnrss 是一个开源项目，为各种 HN 资源提供 RSS 提要。以下是一些示例： 带有关键字“django”的新线程：hnrss.org&#x2F;newest?q&#x3D;django 用户’dang’提交的新帖子：hnrss.org&#x2F;submitted?id&#x3D;dang 新职位与 100+ 赞成票和 25+ 评论：hnrss.org&#x2F;show?points&#x3D;100&amp;comments&#x3D;25 Lobsters 首页：obste.rs&#x2F;rss Tag（s）*lobste.rs&#x2F;t&#x2F;programming.rss（网络）*lobste.rs&#x2F;t&#x2F;programming，compsci.rss （web） Reddit在 URL 的末尾添加 .rss ： 首页：https://reddit.com/.rss 子编辑： reddit.com&#x2F;r&#x2F;programming.rss reddit.com&#x2F;r&#x2F;LifeProTips&#x2F;top.rss 用户：reddit.com&#x2F;u&#x2F;spez.rss Multireddit： reddit.com&#x2F;user&#x2F;reddit&#x2F;m&#x2F;admin_faves.rss reddit.com&#x2F;r&#x2F;programming+javascript+unixporn.rss YouTube 渠道：youtube.com&#x2F;feeds&#x2F;videos.xml?channel_id&#x3D;UCYO_jab_esuFRV4b17AJtAw 播放列表：youtube.com&#x2F;feeds&#x2F;videos.xml?playlist_id&#x3D;PL3A5849BDE0581B19 GitHub 发布：github.com&#x2F;3b1b&#x2F;manim&#x2F;releases.atom 提交：github.com&#x2F;3b1b&#x2F;manim&#x2F;commits&#x2F;master.atom 标签：github.com&#x2F;3b1b&#x2F;manim&#x2F;tags.atom 要获取您最近活动的私人提要，您可以单击 GitHub 主页底部的“订阅您的新闻提要”。 GitLab 活动：gitlab.com&#x2F;inkscape&#x2F;inkscape.atom 提交：gitlab.com&#x2F;inkscape&#x2F;inkscape&#x2F;-&#x2F;commits&#x2F;master?format&#x3D;atom 标签：gitlab.com&#x2F;inkscape&#x2F;inkscape&#x2F;-&#x2F;tags&#x2F;master?format&#x3D;atom 问题：gitlab.com&#x2F;inkscape&#x2F;inkscape&#x2F;-&#x2F;tags&#x2F;master?format&#x3D;atom Stack Overflow Tag（s） stackoverflow.com&#x2F;feeds&#x2F;tag? tagnames&#x3D;haskell&amp;sort&#x3D;newest stackoverflow.com&#x2F;feeds&#x2F;tag? tagnames&#x3D;haskell+java&amp;sort&#x3D;newest TwitterTwitter 在 2013 年停止提供官方 Feed。但是，您可以使用 nitter.net 进行此操作。 用户：nitter.net&#x2F;xkcd&#x2F;rss Mastodon 用户：mastodon.social&#x2F;@Gargron.rss 或 mastodon.social&#x2F;users&#x2F;Gargron.atom Medium 用户：medium.com&#x2F;feed&#x2F;@Medium 标签：medium.com&#x2F;feed&#x2F;tag&#x2F;programming[更多信息](https://help.medium.com/hc/en-us/articles/214874118- RSS -feeds) InstagramBibliogram，一个第三方替代 Instagram 前端为 Instagram 帐户提供 Rss&#x2F;Atom 提要： 用户：bibliogram.art&#x2F;u&#x2F;starwars&#x2F;rss.xml 或 bibliogram.art&#x2F;u&#x2F;starwars&#x2F;atom.xml 对于不提供可访问的 RSS&#x2F;Atom提要的网站，如 Facebook 或 Twitch，RSS -Bridge 项目提供基于为这些网站开发的“桥梁”的提要。必要时考虑使用它。 这个 gist 有到许多其他平台的 RSS 链接。 从手机中删除应用程序除了占用更多的空间和带宽外，移动的应用程序比网站更能直接访问您的个人信息。但是，配置了 uBlock Origin 和 Privacy Badger 等广告拦截器的浏览器沿着内置隐私选项（地理位置&#x2F;指纹识别拦截器，多帐户容器和 Firefox 上的增强跟踪保护等）启用将在您访问的所有网站上工作，并阻止嵌入其中的各种跟踪器。 如果你愿意为了隐私而给予一点点便利，可以考虑使用这些尊重隐私的前端： Twitter 的 Nitter Reddit 的 teddit &#x2F; libreddit Instagram 的参考书目 但问题仍然存在，像 multireddits 或 Twitter 列表这样的功能怎么办？有很多方法可以解决。 对于 Reddit，如果你的自定义 feed 有少于 25 个 subreddit，你可以使用 + 技巧来加入多个 subreddit feed，并将链接保存为书签。例如：reddit.com&#x2F;r&#x2F;pics+videos+wtf 和 reddit.com&#x2F;r&#x2F;pics+videos+wtf.rss。 有其他用户为不同主题创建的公共 multireddits&#x2F;Twitter 列表，如 programming, Linux, security, cats 等。 必要时使用移动的站点。大多数网站都有完全可用的移动响应网站。如果您必须使用移动的应用程序，您可以使用 NetGuard 来阻止对每个应用程序的互联网访问。 结论 RSS 是管理订阅的一种非常简洁的方式，同时节省了大量的时间。我敦促所有的博客和网站管理员在他们的网站上添加一个 RSS&#x2F;Atom提要，尊重他们的用户，而不是显示一个丑陋的，分散注意力的模式，要求一个电子邮件。 有官方和第三方的方式来获得各种网站的 RSS 提要。有很好的开源提要阅读器来管理这些订阅。使用替代网站&#x2F;应用程序而不是移动的应用程序来减少数据泄漏。 使用 RSS 来保护隐私和效率。 PS:欺骗模式（也称为“黑暗模式”）是网站和应用程序中使用的技巧，可以让您做一些您不想做的事情，例如购买或注册某些东西。举例来说： 用户很难比较产品，因为功能和价格以复杂的方式结合在一起，或者因为很难找到必要的信息。 用户在情感上被操纵去做一些他们本来不会做的事情。 用户错误地认为他们正在点击界面元素或本地内容，但实际上这是一种伪装的行为。 用户被迫完成一个动作，因为他们被呈现了一个有限供应或受欢迎的虚假指示。 用户被误导认为产品比实际更受欢迎或更可信，因为他们看到了虚假的评论，推荐或活动消息。 用户被迫完成一个动作，因为他们看到了一个虚假的时间限制。 用户被迫完成一个动作，因为他们看到了一个虚假的时间限制。 用户发现注册或订阅很容易，但当他们想取消时，他们发现很难。 用户被广告上的低价所吸引。在投入时间和精力之后，他们在到达结账台时发现了意想不到的费用和收费。 用户在没有明确披露或明确同意的情况下，在不知不觉中加入了定期订阅或付款计划。 用户试图做一些事情，但他们不断被要求做一些可能不符合他们最佳利益的其他事情的请求打断。 用户试图做一些事情，但他们不断被要求做一些可能不符合他们最佳利益的其他事情的请求打断。 向用户呈现已经为他们选择的默认选项，以影响他们的决策。 用户被以虚假的借口吸引到交易中，因为相关的信息被隐藏或延迟呈现给他们。 由于呈现混淆或误导性语言，用户被误导采取行动。 用户期望在页面上看到以清晰和可预测的方式呈现的信息，但这些信息是隐藏的，模糊的或伪装的。","tags":["翻译"]},{"title":"3 月软件推荐","path":"/posts/fc02.html","content":"2024-03 软件推荐加入软件分享群 2024-03-22wingetui一个图形用户界面，旨在帮助您管理Windows最常见的包管理器中的包，例如Winget，Scoop，Chocolatey，Pip，Npm，.NET Tool和PowerShell Gallery。 2024-03-21影视TVBox 是一款电视盒子播放器，开源免费，简洁无广告，可以添加源，速度和资源量是根据添加的配置而决定的，只要添加的配置里的线路给力，就可以做到流畅观看电视直播、电视剧、电影等。 视频源推荐： http:&#x2F;&#x2F;饭太硬.top&#x2F;tv https://www.lige.fit/tvbox https://s.niao.su/8/ https://www.juwanhezi.com/other/jsonlist https://agit.ai/butterfly/gaotianliuyun 下载地址：https://www.123pan.com/s/lbwrVv-hQWIh.html 2024-03-19草料二维码灵活组合各种功能模块，根据实际需求搭建二维码系统；无须下载APP，用微信小程序作为操作端。 2024-03-18音乐时刻一款可以听音乐，下载音乐的软件，免费无广告。 软件支持安卓。 下载地址：https://www.123pan.com/s/lbwrVv-hQWIh.html 软件更新： 闪电藤：2.1.7 修复 bug，支持剪贴板同步（会员功能） 2024-03-16bilidown一款简洁好用的 B 站视频下载工具支持由 UP 主上传的单集，多集及相关封面，弹幕，字幕，音乐，刮削等等。支持任意粒度批量组合，登录后支持到 1080P，大会员可获取所有音质及画质。 下载地址：https://www.123pan.com/s/lbwrVv-hQWIh.html 软件更新： 闪电藤：2.1.6 [全新功能] 支持自动剪贴板同步 @守护 @Rsugar @闪电侠客（免费版本限制最多 20 个字同步，付费会员不限字数） [体验优化] 优化下拉刷新连接，连接速度更快 设备会话页，发送和接收的背景色用不同颜色展示，更清晰区分发送和接收 @HotWater [BUG 修复]手机系统相册&#x2F;文件管理器多选分享异常问题修复扫码连接多 IP 设备只连第一个 IP 的问题dwg 的格式文件的回显问题 @面条渣渣 nian: 24.3.1 记账本统计页，账目支持按日历显示，范围选择器支持自定义日期范围。 优化部分页面细节，修复部分反馈过来的问题，提升性能和稳定性。打卡本部分图表日期采用双排显示，上面月份，下面日期。 2024-03-11Flow.Launcher快速启动工具，如果说快速启动工具有一个排行榜，我觉得 Flow.Launcher 可以排在前三，其他的两个是：Listary 和 Utools。 但是！Flow.Launcher 是免费的呀。 24-3-6res-downloader获取视频、音频、图片、m3u8 支持获取视频号、抖音、快手、小红书、酷狗音乐、qq 音乐、微信小程序等网络资源 下载地址： 蓝奏云下载 密码:9vs5 24-3-591 搜游 soyo一个怀旧的手机游戏论坛，有很多的 Java 时代的手机游戏。 下载地址： https://www.123pan.com/s/lbwrVv-CesIh.html 24-3-4c001apk第三方酷安 app，完蛋，让你用到真酷安了。软件支持安卓。 下载地址： https://www.123pan.com/s/lbwrVv-BlsIh.html 24-3-3奇妙影视基于开源的 TV-box 开发的一款影视应用，下载即用。支持安卓。 下载地址： https://www.123pan.com/s/lbwrVv-x0sIh.html 24-3-2闪电藤局域网文件传输。全平台支持。 下载地址： https://www.123pan.com/s/lbwrVv-a0sIh.html 24-3-1Jane Reader现代化的 epub 阅读器，沉浸式的阅读体验。支持 Windows、MacOS。 下载地址： https://www.123pan.com/s/lbwrVv-P0sIh.html","tags":["软件推荐"]},{"title":"AHK 自动复制的实现与逻辑分析","path":"/posts/d3ee.html","content":"温馨提示： 本文使用 Ahk v2 进行代码编写，如有需求，自行修改为 v1 代码。 文章涉及思路分析与错误代码展示，需要成品可以下拉到最后查看。 昨天学习了 KeyWait，第一反应是可以做一个自动复制的脚本。 说干就干，仔细分析一下功能需求： 鼠标左键按下，选中文本，实现复制； 鼠标点击需要插入文本的地方Ctrl+V​粘贴文本。 初步尝试 第一版代码出来了： 1234~LButton::&#123;KeyWait &quot;LButton&quot;Send &quot;^c&quot;&#125; 写的很快，错的也很快。 虽然实现了快速复制，但是我每次鼠标点击都会触发事件。 回到需求 2，很明显复制的文本会立刻被覆盖，难道用来（搭配微信输入法）做剪贴板同步吗？ 鸡肋！（骂骂咧咧继续思考） 引入sleep​和GetKeyState​ 一夜无果，第二天重新思考并在群里进行了询问。 很明显，我不需要在任何时候去进行复制，而选择被复制的文本肯定需要一定时间。 初步将这个时间定为 1s。 首先是决定加入sleep​，简单的加入并不能解决问题，因为会阻塞运行，导致我的鼠标勾选不显示。 由群里@逍遥大佬的第一版本建议出现了，我接触到一个新的函数GetKeyState​： 123456789101112~LButton::&#123; StartTime := A_TickCount While GetKeyState(&quot;LButton&quot;, &quot;P&quot;) &#123; If (A_TickCount - StartTime &gt; 2000) &#123; Send &quot;^c&quot; Return &#125; Sleep 10 &#125;&#125; 12345678910111213141516171819202122232425262728293031建议的很好，仍然觉得哪里不对，打开文档查一下：&gt; 对于键盘键和鼠标按钮，如果键位向下 (或切换开启), 该函数返回 1(true) 如果键位向上 (或切换关闭), 该函数返回 0(false). 咦，这样看来，`while`​循环发生在我按住鼠标的时候啊，那岂不是不等我完全选中就要开始复制了？ 事实证明，的确如此（大哭）。# 问题解决（两种方案） 我没解决，饭后再看发现群里已经出现了两种解法，鲁迅说过：拿来吧你，现在都是我的了。 本着拿来主义精神，我对代码分析后得到了满足需求的两个版本： 第一个版本仍然是逍遥大佬给出的：```ahk~LButton:: &#123;\tStartTime := A_TickCount\tWhile GetKeyState(&quot;LButton&quot;, &quot;P&quot;)\t&#123; Sleep 10\t&#125;\tIf (A_TickCount - StartTime &gt; 1000)\t&#123; ; MsgBox &quot;长按左键 1 秒钟了！&quot; Send &quot;^c&quot;\t&#125;&#125; 这个解法的思路是：要在松开左键时判断，那就在左键按住时阻塞他，于是有了while​循环的Sleep​，当释放鼠标，进行判断。 思路奇妙而省心。（今日大收获之while​不仅可以用来循环，还可以用来等待） 第二个版本是@白天提出： 1234567~LButton:: &#123;\tStartTime := A_Now\tKeyWait &quot;LButton&quot;\tif DateDiff(A_Now, StartTime, &quot;Seconds&quot;) &gt;= 1 &#123; SendInput &quot;^c&quot;\t&#125;&#125; 这里以按下左键触发程序，然后立刻做了一个锚点StartTime​，当 KeyWait 执行结束后将时间进行对比，这其实更加的合理，只是我最初的思路是，一步到位的等待 KeyWait LButton Up，反而执行失败。 思考的点在于，我没料到，在我一直按住左键这段时间，可以额外添加一个KeyWait &quot;LButton&quot;​来进行判断。 写程序最重要的是思维，今天一个程序的两个解法让我收获匪浅，今后将继续学习下去。 最后重新放上两种解法： 123456789101112~LButton:: &#123;\tStartTime := A_TickCount\tWhile GetKeyState(&quot;LButton&quot;, &quot;P&quot;)\t&#123; Sleep 10\t&#125;\tIf (A_TickCount - StartTime &gt; 1000)\t&#123; ; MsgBox &quot;长按左键 1 秒钟了！&quot; Send &quot;^c&quot;\t&#125;&#125; 1234567~LButton:: &#123;\tStartTime := A_Now\tKeyWait &quot;LButton&quot;\tif DateDiff(A_Now, StartTime, &quot;Seconds&quot;) &gt;= 1 &#123; SendInput &quot;^c&quot;\t&#125;&#125; ‍","tags":["技术","AHK"],"categories":["探索互联网"]},{"title":"左手","path":"/posts/a706.html","content":"生为左手生为左手，不同于主流，我比我的搭档更加灵活，大脑也认同这一点。 我可以更快的学习，拥有更灵活的身手。 那是第五年的某一天，我开始有了自己的记忆。 一座农家小院，透过彩色的玻璃看到外面的世界偏离了色彩，小孩子在家里跑来跑去，我感受到自己强而有力。 关于童年，我曾有过无数的记忆。像是拉开弹弓命中自己，拿起镰刀割破右手的身体，我总是带着他兴冲冲的出去，又很快他哭着跑回来。 为何我强而有力，却总是显得笨拙？ 继续向过往回忆，是那个夏日的午后，他在学习？他去吃饭。 放下筷子后，他第一次选择了右手，我看到了小右得意而阴险的表情，我听到了他欣喜又激动的语气。 “我失败了。” 我想，我应该就此退出。 进退维谷“他可以同时用两只手。” 这是在哪里？ 我从自我的世界中苏醒，手上的是筷子吗？ 嘿，老兄，你还好吗？ 我与久违的老朋友打了声招呼，换来的却是陌生的回复。也对，我已经很久没有出来过了，外面早已经是一代新人换旧人。 那么，现在我又是在什么地方呢？一间拥挤的屋子，一群红光满面的人，一圈我不认识的亲戚。看起来又是哪家的婚礼罢。 明明大家都用右手吃饭，却有人会不舒服，真是奇怪。 小小少年被安排坐到那里，换上了我抓起筷子，耳边传来的是声声称颂。 “他可以同时用两只手，真厉害。” 年少的称赞，大多不是来自于少年本身，一是对孩子的热爱、二是看孩子父母的面子，少年照单全收。 我也曾风光一阵，在我和小右势均力敌的时代。 我看得见的此消彼长，我渐渐的退步抽身，只有时不时的遇到新物件，我会被大脑潜意识的拿起，直到与人碰撞。 “咦，你用左手打球啊。” 乒乓球桌上，羽毛球场，或是台球案上，我总是突然被看到，或是意识到自己与其他人的不同，于是换上了小右。 小右跃跃欲试，他总是比我灵活，他早就比我灵活。 但他不行。 世界、小右和我我是在什么时候被要求退下的？ 那年，他要上学，他年龄太小，于是老师说：他用左手写字，这样子不行的。 于是强行让小右上了场。 小右比我努力吧，或许如此。 总之在那个午后，小右接过了我的工作，从此笔由他握住。 我不记得我工作时是怎样的光景，只是在几年后的一天，爸爸问他，你还会用你的左手吗？ 我许久没有拿起笔，就像是初生的稚子，笨拙。 小右的字虽然流利，还是很丑；小右用筷子渐渐比我好的多了，仅此而已。 笨拙的小右获得了我的权柄，没能去发扬光大。 我不知道我是不是会做的更好，我永远也不会了。 我的天赋就像是遇到滔滔江水，只能被裹挟着流到下游，从此不见踪迹。 另一个小左或许在另一个世界，我不是这样的境遇。 就像在那天，看到的它。 高中时代，我见到了那个用左手写字的人。 他其貌不扬，却用左手写出一手好字。 老师喜欢说你们的右手要拿起笔。 于是我们的视线望向它，可以拿起笔的左手。 在时代滚滚时，它可以自由的放飞自我。 或许，在另一个世界，我也如此。","tags":["散文","奇思妙想"],"categories":["文艺的风"]},{"title":"Next Cloud 容器挂载主机文件夹","path":"/posts/9ea6.html","content":"Hello，大家好，这期我来给大家讲一下如何在 next cloud 云盘中挂载本机的目录。 我们打开 zimaos，应用商店搜索 Next Cloud 安装； 打开文件，选择一个我们想要去映射的文件夹，我选择 download，现在记住这个地址是 DATA&#x2F;Download； 打开 Next Cloud 容器右上角三个点，选择设置，添加卷，选择刚刚的 Download，右面输入 /download。记住右侧的路径； 701 x 3942560 x 1440 打开 Next Cloud，点击右上角，选择应用，我们向下滑，找到一个名字是 External storage support 的应用，启用； 打开设置，这里要注意，不是个人，下面有个管理，划到管理，在下面有一个外部储存；​ 701 x 3942560 x 1440 选中允许用户挂载储存； 现在我选择这里增加储存，选择本地； 目录名称：挂载后显示的名称；配置：刚刚保存的 /Download；可用于：所有用户或是选择单个用户；点击右侧对号保存，最左侧显示绿色对号则挂载成功。 701 x 3942560 x 1440 回到文件目录可以查看。​ 701 x 3942560 x 1440 ‍","tags":["折腾日记","好玩的 Linux"],"categories":["探索互联网"]},{"title":"2023 年终总结","path":"/posts/fef3.html","content":"前言我在过往也一直有写年度回顾的习惯，一般是在元旦后的几个星期里，或是在上半年的某一天突然想起来，然后决定开始写一篇年度回顾。 通常我的内容是从上一年元旦开始一整年的生活，记得住的大事件，或是凭借蛛丝马迹的回忆，从 17 年至今，年年如此。 今年在 Find Blog 看到从不同方面回顾过去一年，然后再记录最骄傲的成就、最大的挑战、明年最主要的愿望这一带有目的的主题回顾，不免有些新奇，决定参与一次。 开始之前，我也加上一句对 2023 年年末这几天的简单概述：七零八碎，一地鸡毛，最后又绝处逢生，不同的地方都有了新的开始，面对下一年的是百废待兴。正在此时，我开始我的年度回顾和新年展望。 健康&#x2F;锻炼今年的健康状况其实算是历年都比较差，三月份在甲流肆虐的时间里，几次都感到身体不舒服，最后在室友沦陷的日子里，我还是倒下了。 后来的一年倒是平安顺遂，悠然的结束了这一整年。 在去年的年末，随着一份文件的下达，校园跑开始了，说实话这个东西很大程度上消磨了我跑步的热情，让人大有一种“我可以想跑步，但不能是因为你强迫我。”，于是今年的跑步也就只有那么几次，或有十几公里的样子，下半年更加的怠惰起来。 工作与职业今年的一整年，是在飘摇中度过的，年初对于考研和工作的选择，直到某一天终于下定了决心扔下全部复习资料，决定开始找工作。 自从暑假开始，直到十二月这么长的日子里，有过两次实习，大多数时间都是在无所事事和被无聊的事耽搁，总之是面试了十多家，最后也没拿到满意的 offer。 最后在现在的实习公司留下，打算就这么一直干下去了。 个人生活与家庭说实在的，个人生活逐渐的丰富起来，我还总是记得大学四年，每年在不同的地方，因为不同的境遇遇到的不同的社交圈子，我拓展、熟识，又舍弃，最后所遗留的朋友却不多。 今年终于算是卸下了社团的活动，于是又和很多人彻底告别。 十月份回了一次家里，回来后与宿舍的同学也基本没了什么交流。 几天前，和家里面会联系的姐姐弟弟都联系了个遍，去感受自己和世界的羁绊，又约了在学校还联系的两个朋友。 总的来说，在社交这里，我的一级朋友又缺失了一个，但剩下的关系到依然很好。 学习和知识管理直到 11 月，我才后知后觉，过度使用 Chat GPT 对个人而言危害巨大，尤其是我现在正处于学习阶段，对于代码的掌控能力直线下降。 忙里忙慌的去大模型化，只有很熟悉的领域才敢交给大模型去做。 在知识管理这里，我终于确定选择好了工具，过去几年用过太多：语雀、微秘、Logseq、黑曜石、思源笔记、幕布。 我对笔记有天然的不信任，语雀的运营让我很惊慌，思源笔记又没有良好的同步性，手机、电脑、公司的文档始终是不能完全同步。 思源笔记的 S3 推出以后，我再次下载了这个老伙计，网络上关于开发者的争议我倒是不太在乎，于是尝试了一段时间，我付费购买了永久的功能特性以使用 S3 同步功能，也慢慢的将我的数据迁移过来。 旅游与文化大概的盘算了一下，今年没有去什么远处旅游，只是无聊就跑一次西湖，算下来应该也有个七八次？ 一年里最值得纪念的活动一是五月份去看氧气音乐节，看到了毛不易；十一月去慈溪，参加卢思浩的读者见面会，这是我第二次去看他的见面会，搭车、寻路、买书、入场、听他讲故事，也留下自己的故事。 今年读书还不错，在纸间书摘上面的记录是 17 本，和 2022 持平，当然也藏进去基本消遣的网文，这一年开始偏爱推理小说，看了两本东野圭吾做消遣之后，去看江户川乱步、松本清张，还把《无人生还》的电影、小说都看了一遍。 年末趁着各种活动，买了很多书，从《山海经》到《镜花缘》，老舍作品和鲁迅小说集，想起来高中时从同学那里借来的鲁迅文集，毕业归还时竟然也看完了半本。 网络文学作品也偶尔带来一些惊喜，像是我高一读《择天记》时的惊喜一样，断断续续读了几年，我终于读完了《修真四万年》，竟然也收获颇丰，带着修仙、修真大道之争的主线，一路上却讨论了不知道多少深刻的社会运行模式，以至于有很长一段时间，和人聊起小说，都是以《修真四万年》开场。 兴趣和创造今年的兴趣没什么大的变化，还是会常常读书、不时下一下象棋、偶尔买一份积木 DIY。 程序设计文件夹里新建了一个又一个小程序的设计思路，囿于能力等待着实现的时间。年末终于开始动手去写，目前写完了第二个，等待着完善后发出来。 折腾了很久，终于开始正式的运营自己的博客，折腾了几个 Hexo 的主题，选一个自己喜欢的，买了一个 玩客云的小主机玩了几天又转手出去，从学长的手里买一个性能更好的 x86 小主机，搞了一个自己的 nas，做了相册的备份，其他功能则是继续探索。 偶尔也买一个游戏玩，不过多的时候还是在模拟器或玩玩学习版，十月后忽然心血来潮，看了几天买回来一个 NS，玩了一个月的《火焰纹章 风花雪月》，而后又转手出去，也算是终于体验了一次主机玩家的乐趣，不过卡带倒是不太好卖，还留在自己的柜子里。 情绪&amp;精神状态今年有那么一段时间，我的精神状态是很不好的，那段时间女朋友深陷抑郁症的折磨，我常常在陪她伤心难过后，感叹为什么世界对人为何不带有一丝怜悯。 我在二月份时写完了整个 22 年的回顾日记，相比之下，大二是轻松的，于是看上去也要有趣的多。 财务总结关于这一年的财务状况，最该说的是花呗，我曾在去年短暂的清空了花呗的借款，一次出行计划又打破了平衡，关闭花呗的计划就又搁浅了下来，今年二月和三月，吃了许久挂面的情况下，彻底的清算了全部的账单，后面的财务依旧是生活费的月光，身上也感觉到了轻松，后来看到了花呗开始与征信挂钩。 今年最开心的部分其实也在于此，我开始逐渐有了工资，七八月份实习的公司，财务搞错了状况，让我的花销也没控制好，最后也没能存下些钱。拿了第一份工资，给家里人去买些礼物，主要是给爸爸买了一个飞利浦的筋膜枪，希望可以缓解他的背部疼痛。 十二月以后，新的公司开始提供实习工资，我的房租、生活费再次有了保障。 最骄傲的成就今年给我感受最好的一件事是在三月，某室友再次请教我一道 matlab 编程的问题，找到了我 22 年 12 月 30 日写的一份代码，当时的代码巧妙发挥了索引的作用，让程序不多一个变量，原来自己也写过这么漂亮二代码。 最大的挑战在放弃了考研后，目标就变成了找工作，忽而间，我的大学同学与我大多断了联系，我开始游走在学校以外的地方，找工作、探索创业。 24 年的规划新的一年没什么大的志向，认真的做完毕业设计，平平安安的结束我的大学生活。 春招时再去碰碰运气，能不能找到一份更好工作。 第一年或许不会有太多的工资，就一为家人添置些礼物，达成给女友的承诺，买一部小米 15 作为礼物。","tags":["年终总结"],"categories":["追求本我"]},{"title":"AHK 上手以及编辑器配置","path":"/posts/65a0.html","content":"前言最近要写一点简短的小东西，想起了以前加入过的一个脚本语言社区，名字是 AutoHotKey，应该可以满足我的需求，花费了半个小时搞定环境和编辑器，主要是安装路径出了一点问题。 AHK 介绍以及安装Chris Mallett，这个人在 2003 年 11 月发布了 AHK 的第一个版本，经过数年的完善，在（08 年）Lexikos 等人的帮助下，发布了经典版本：1.0.48.05。 2011 年开始社区主要开始由 Lexikos 主导，并开发 AutoHotkey v2-alpha 至今。 通常情况下，大家更支持使用经典的版本，不过我这人就喜欢玩新的，于是果断下载了最新版。 目前的官网：www.autohotkey.com 编辑器选择以及坑其实我还是比较喜欢每个语言都有自己的编辑器的，Java 就用 IDEA，Python 使用 Pycharm，但是扫了一眼目前大家推荐的编辑器还是挺丑的，就算了，还是老老实实用 vscode 吧。 下载 ahk、安装 vscode、应用商店搜索 AutoHotkey，一气呵成，写下第一个脚本。 1运行失败 嗯，看一下报错： 1(哦，忘记截图了） 大概就是 C 盘位置没有找到 ahk 文件，那应该是默认安装位置。 于是打开设置，选择拓展，果然找到了相关选项： 果断改成我的安装路径，重新运行。 果断成功。 总结 下载 AHK：官网 下载安装 vscode 搜索拓展 AutoHotkey，选择 AutoHotkey v2 Language Support 或者 AutoHotkey Plus Plus，打开设置–&gt;拓展位置，选中对应拓展。 如果是 AutoHotkey v2 Language Support 如果是 AutoHotkey Plus Plus 选项有点多，对应着都改一下。","tags":["技术","AHK"],"categories":["探索互联网"]},{"title":"Anaconda 使用的几个点","path":"/posts/ae8e.html","content":"最近工作需要，重新配置了 Anaconda，过程中出现了些许问题，特此做个记录和汇总。 1. 系统环境配置Win + S搜索 env –&gt; 编辑系统环境变量 –&gt; 环境变量。 在 Path 中新建三个系统环境变量： 12345① anaconda 安装的目录 D:\\anaconda② anaconda/scripts 的目录 D:\\anaconda\\Scripts③ bin 的目录 D:\\Download\\anaconda\\Scripts\\Library\\bin PS：在安装时勾选添加anaconda3 到PATH就会自动配置了。 2. Pycharm 识别配置好了后，我的pycharm还是识别不到conda的可执行文件，新建环境，选择conda，conda安装文件夹bin文件下面的conda.bat 文件。 后面遇到其他情况我再进行补充。 3. 常用命令查看conda版本：1conda --version 创建新环境：1conda create --name 环境名 python=python版本（3.12） 删除环境：1conda remove --name envname --all","tags":["技术","Windows","Python"],"categories":["探索互联网"]},{"title":"Java 中文乱码问题 - 2021 年困扰我的万恶之源","path":"/posts/4d37.html","content":"2021 年，我选了一门名为《高级编程技术》的课，课程内容是 Java 编程，我很感兴趣，彼时我使用最新的 JDK 18，以及 IDEA。 我遇到了一点小小的问题，控制台输出的文字永远是乱码，网络上的三五种方法尝试了许久也不能解决。 时隔一年发现，或许是 JDK 18 与 IDEA 之间有些不可调和的矛盾，于是改用了 JDK 17。","tags":["技术","Java"],"categories":["探索互联网"]},{"title":"计量的几处风景","path":"/posts/e7fe.html","content":"三月的一个晚上，在九号楼后面的小路上偶遇一只小小的橘猫，看起来年纪不大的样子，声音有些沙哑的在我身边蹭着，像是寻觅着实物，彼时还有供人喂猫的公益猫粮，我取了些许递给他。 它等待着，却没有吃。向更黑的树林里呼唤着，叫来了他的同伴，更加胆小的小猫，他们躲在黑暗里，向路人卖力的展示自己作为猫咪的可爱之处。 我说：“你们来这边，七号楼的女学生们最爱喂猫了。” 后来看着两只小猫日渐有了精神，也变得健康了些。 大约一个月后，我听闻生活区里有一只橘猫被撞死了，女友说正是那晚讨好我们的小橘猫。 在日月湖的两侧，一侧有一群大白鹅聚众嬉戏，或是一头扎进水里，扬起一片水花；在小桥的另外一侧，是一只灰鹅，或是被欺负，或是出了其他的意外，腿卡在翅膀中间，失去了平衡，只能在小小的区域里转圈圈。 一日在体育馆上完了课，看着朋友几分钟前发来消息说快来六楼，看今天的晚霞。 我匆匆跑上楼去，将手上的东西随手丢在了路过的桌子上，来不及等电梯。 但是只能看到一抹残阳，我静静的看着夕阳消散，夜幕降临。慨叹夕阳无限好。 暑假时在校外租了房子，出去实习。 偶尔回到学校见见朋友拿些东西，只看寝室逐渐变空，约到的朋友越来越少，直到凑不齐一桌麻将，我再看生活区长长的路，开始觉得它无比的陌生。 怪不得我见不到几位大四的学长学姐，到了此时校园就变得无聊起来了。","tags":["随笔","看世界","校园风光"],"categories":["何不看世界"]},{"title":"SSH 安装和查看","path":"/posts/ec0.html","content":"安装 SSH（Secure Shell）服务是在 Linux 系统中进行远程管理和安全登录的常见做法。 以下是在常见的 Linux 发行版中安装 SSH 服务的步骤： 打开终端，并以管理员权限（sudo）登录。 输入适用于你的 Linux 发行版的安装命令： Ubuntu&#x2F;Debian： 1sudo apt-get install openssh-server CentOS&#x2F;Fedora： 1sudo dnf install openssh-server Arch Linux&#x2F;Manjaro： 1sudo pacman -S openssh 输入管理员密码以确认安装。输入密码后，按下回车键继续。 安装完成后，SSH 服务将自动启动。使用以下命令检查 SSH 服务的状态： Ubuntu&#x2F;Debian： 1systemctl status ssh CentOS&#x2F;Fedora： 1systemctl status sshd Arch Linux&#x2F;Manjaro： 1systemctl status sshd 如果服务正在运行，你将看到类似于”active (running)”的状态信息。 123456789101112131415161718● ssh.service - OpenBSD Secure Shell server Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled) Active: active (running) since Fri 2023-11-10 10:49:09 CST; 32min ago Docs: man:sshd(8) man:sshd_config(5) Main PID: 17171 (sshd) Tasks: 1 (limit: 4165) Memory: 1.4M CPU: 138ms CGroup: /system.slice/ssh.service └─17171 &quot;sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups&quot;11 月 10 10:49:09 E systemd[1]: Starting OpenBSD Secure Shell server...11 月 10 10:49:09 E sshd[17171]: Server listening on 0.0.0.0 port 22.11 月 10 10:49:09 E sshd[17171]: Server listening on :: port 22.11 月 10 10:49:09 E systemd[1]: Started OpenBSD Secure Shell server.11 月 10 10:52:57 E sshd[18783]: Accepted password for youyu from 192.168.10.164 port 64557 ssh211 月 10 10:52:57 E sshd[18783]: pam_unix(sshd:session): session opened for user youyu(uid=1000) by (uid=0)","tags":["技术","好玩的 Linux"],"categories":["探索互联网"]},{"title":"scoop 安装和使用","path":"/posts/ea40.html","content":"关于新电脑上管理员用户 scoop 的安装和使用 前言Windows 11 的优化实在是让人不能恭维，使用了长达两年五个月左右，期间有过数次的重新安装，最近变得十分卡顿，不只是自己到底设置了些什么，于是在上个周末还是选择了重新安装和使用 windows10 的系统，再次回归第一印象就是：“流畅，流畅，还他妈的是流畅！”。 一些常用的软件还是需要配置的，轻车熟路的搞好了 PyCharm、Git、迁移了博客（迁移到了我的小电脑上）、最后所需要的就是搞定听歌软件了，不久前刚刚安装的 musicfox，却是卡在了安装 scoop 的步骤上面了，研究了许久发现本地默认创建的是管理员用户。 解决方案 在 github 找到 install.ps1 文件，复制文件内容。 本地新建 install.ps1 将复制的内容填充进去。 在 install.ps1 所在文件夹打开 powershell，依次输入命令 ​irm get.scoop.sh -outfile &#39;install.ps1&#39;​​ ​.\\install.ps1 -RunAsAdmin​​ ​iex &quot;&amp; &#123;$(irm get.scoop.sh)&#125; -RunAsAdmin&quot;​​ 如果没有安装 git，安装 git： ​scoop install git​​ 大功告成回到最初的目的，安装musicfox： 12scoop bucket add go-musicfox https://github.com/go-musicfox/go-musicfox.gitscoop install go-musicfox 附录·一些scoop的命令12345678910111213141516171819202122232425262728# 更新 scoop 及软件包列表scoop update## 安装软件 ### 非全局安装（并禁止安装包缓存）scoop install -k &lt;app&gt;# 全局安装（并禁止安装包缓存）sudo scoop install -gk &lt;app&gt;## 卸载软件 ### 卸载非全局软件（并删除配置文件）scoop uninstall -p &lt;app&gt;# 卸载全局软件（并删除配置文件）sudo scoop uninstall -gp &lt;app&gt;## 更新软件 ### 更新所有非全局软件（并禁止安装包缓存）scoop update -k *# 更新所有软件（并禁止安装包缓存）sudo scoop update -gk *## 垃圾清理 ### 删除所有旧版本非全局软件（并删除软件包缓存）scoop cleanup -k *# 删除所有旧版本软件（并删除软件包缓存）sudo scoop cleanup -gk *# 清除软件包缓存scoop cache rm *","tags":["技术","Windows"],"categories":["探索互联网"]},{"title":"去签售会","path":"/posts/a8a8.html","content":"半个月前的周末，我打定主意去慈溪看一次签售会，今年的下半年卢思浩跑了许多地方，起初我想着可以赶辽宁的那一场，结果回家完了几天，好在浙江还有两场。整备好了行装，起床随便吃了点东西就走上了去往余姚的地铁，看窗外风景，浙江多山，短短 40 分钟的路途过了好几个隧道。 抵达后时间尚早，于是悠闲的选择了公交车出行。 上一次见还是在 20 年，那时候我还在上大一，跑了半个杭州到大悦城，那时候内场无座，我买了一本增订的《离开前请叫醒我》，在场外看完了整场。此后三年再没去过大悦城，没有目的实在不想跑去那么远的地方。 去慈溪还是一样，我没弄清楚宁波慈溪为什么下了车是余姚站，只是查找目的地，抵达现场，静坐着、等待着、倾听着，然后去要签字，坐上离开的车。 时间还是太短暂了，只有那么一瞬间我与周围的几十个同伴有了共情，我们在做同样的事情。 于是走的时候还是带了些许的遗憾，多折一段路程去买了些生腌（最后还是发现，自己对生腌的确是接受无能），然后回家。","tags":["看世界","读书"],"categories":["何不看世界"]},{"title":"折腾日记","path":"/posts/dc01.html","content":"前言这两天从学长的手里买来一台小主机，配置还算可用，于是决定拿来玩一下。 配置： 处理器：双核 AMD Athlon pro 300u w&#x2F; radeon vega mobile gfx 主板：HCAR357-MI 内存：4G 存储：三星固态 256G 显卡：AMD&#x2F;ATI 电源：10W 起初我试图运行 docker，但是运行了 docker 对他的内存不是很友好，常常卡死，后来下载了 Elementary OS 做为常用系统，可以满足一点简单的需求，配上 SSH，终于算是稳定了系统环境，接下来尝试着做文件备份和研究一下有没有其他的玩法。","tags":["好玩的 Linux","问题小记"],"categories":["探索互联网"]},{"title":"2023 年在通辽的最后一天","path":"/posts/5d29.html","content":"飞机是下午的，但车要在早上出发，于是七点就到了通辽，却没有合适的地方去度过这个上午。 三月开学时也曾有过同样的经历，那时候选择了火车站旁边的招待所，30 元一天，8 平米的空间却让人憋得心里发慌，最后待了两个小时就跑去车站了。 在路边站了许久，小红书上搜了一下附近的娱乐设施，发现了大学生自习室，环境不错又安安静静的很适合坐下来看一会书。 八点还早，屋子里只有寥寥几人，安静的氛围更好过大学图书馆。可惜了我没有来这地方的需求，不然可真是一个好地方。","tags":["随笔","看世界"],"categories":["何不看世界"]},{"title":"一个听歌的软件","path":"/posts/59968.html","content":"前情提要我最爱用的 LX Music 结束生命周期了，起码今天的到的消息是这样，腾讯的律师函还是蛮狠的。 说起来这也是今年第二次听说南山必胜客的律师函了，上一次是一口气杀死了大批的自动跳过工具，本就半死不活的李跳跳彻底失去了活力，只剩下了社区规则的支持。 MusicFox一个网易云命令行工具，只能说还好我对听歌这件事执念不深，打开一个播放器放到后台为我的工作添加一点声音，也不去管都播放些什么，不吵到我就可以了。 于是看到了这篇文章，看到了这个名为MusicFox的工具，一个在命令行中的网易云音乐，打开即用，登录了我的网易云，每天打开电脑打开 MusicFox 丢到后台就不再去管了。 安装和使用安装包管理器：scoop​ Set-ExecutionPolicy RemoteSigned -Scope CurrentUser # Optional: Needed to run a remote script the first time ​ irm get.scoop.sh | iex 因为我已经安装好了，显示上面的提示。 安装 MusicFox123scoop bucket add go-musicfox https://github.com/go-musicfox/go-musicfox.gitscoop install go-musicfox 使用 登录这里我的账号密码不能登录，使用二维码登录（笑死了特意下载网易云音乐登录后就卸载了） 记录几个常用的快捷键 q&#x2F;Q 退出 Space（空格） 暂停&#x2F;播放 [ 上一曲 ] 下一曲 - 减小音量 &#x3D; 增大音量 , 喜欢当前播放歌曲 &lt; 喜欢当前选中歌曲 其他快捷键可以到官网自行查看。","tags":["软件","音乐","命令行"],"categories":["探索互联网"]},{"title":"黄泉有景 - 姜为孟婆","path":"/posts/2b63.html","content":"“姜，今后你也将是孟婆的一员。” 姜接过孟散官的手书，仍觉得有些荒诞。还在凡尘中的时候她可没想过自己会接受这样一份工作，只是初江王说她不适合奔赴轮回，阿良的灵魂已散，也竟无意于回到人间。 姜坐在往生桥上的孟婆亭，看忘川河里迷雾重重，鬼影绰绰，闲极无聊时她就会如此，来此已有十余日却不见彼岸的方向来过一个往生的人，孟散官的话犹在耳畔：“不灭的灵魂并不多见，魂灵多始于生，止于灭，消散天地间。” 那她所管理的这方土地未免过于荒凉了，姜不免想着。 缥缈的歌声从彼岸响起，逐渐地变大，姜目不转睛的看着自己的第一位“客人”，那是舞王吗？姜不由得低下头揉了揉眼睛，在众星拱月之下，他以与迈克尔·杰克逊相同的经典滑步前进，不知从何处来的灯光映照在他的身上，也是闪到姜眼睛的元凶。 再睁开眼睛看到的是发光的舞鞋，破烂的西装，以及破碎的领结，同时空气里弥漫着恶臭，年轻的孟婆屏住了呼吸，因为这异味，也因为她想到了自己所服务的世界是何处，宝开公司的《植物大战僵尸》。 姜小心翼翼的把视线继续上移，还好虽然面目可怖，并不是一具无头僵尸。 灯光消散，幻影中的四个舞伴也烟消云散，杰克逊在沉默中接过孟婆汤，颈部的伤痕慢慢的复原，就连参差的牙齿也重获新生，空气中弥漫的腐败终于消散开来。 不多时，站在姜的面前的已经是一个身材苗条，一头黑色卷发，面目柔和又帅气的男子，脱落的皮囊坠入忘川河，转眼间不见踪迹。 男人依然沉默的走过往生桥，继续走出几步后身体不自觉地扭动几下，以一种奇特的姿态前行者，直至踏入轮回之地。 许久后，姜长叹一声，纵使是遗失了两世记忆，对舞的追求还是铭刻在他的灵魂之上。 不过这样的腐烂僵尸也会因为孟婆汤修复身上全部的伤痕，它可以治愈一切吗？姜想尝试一次，想着迈克尔生涩的舞步还是就此作罢，继续安坐着，看忘川河水川流不息，惊涛裂岸；彼岸花开花落，铺路待客来。","tags":["奇思妙想","小说"],"categories":["文艺的风"]},{"title":"烟与黄昏","path":"/posts/a169.html","content":"回到北方，面对的是炊烟袅袅的乡村，远离了杭州，仿佛梦幻一样，距离阿里巴巴、网易只有十几公里的位置的互联网之乡。 曾经我与杭州相处了半年，才后知后觉的发现这其实是一座知名的城市。就想着不如去逛一逛，见识一下大厂是什么样子的。 约了他们一个又一个人，然后发现并无人原意同行，或者说大家都是口头上的敷衍一番，无人有着真正想去的意愿。 我回到了家，在毗邻东北的小县城边的农村里，每日藏在家中躲避寒冷的天气。向外望去是一成不变的院子里的雪、是久无人居住的房屋、是不时穿过的匆忙汽车，那些仿佛都与我毫无瓜葛一样。 一日黄昏将至，姐姐忽然决定要出去跑步，又要拽着我一同前去，推脱再三，我只得披上衣服走出家门，物理上的寒风当然极度难忍，只是下载一个 keep 的时候，手足变得十分的僵硬了，赶紧把手揣进兜里，往前追去。 转了一个弯看见的是长长的蔓延到村子之外的路，趋于同化的房屋排列在道路两侧，像是歌里描述的“袅袅炊烟，小小村落”。","tags":["随笔"],"categories":["文艺的风"]},{"title":"天空雾雨交织","path":"/posts/2386.html","content":"在浙，提笔总是想写下一句，台风来了或是台风去了，自从去年七月以后东海的台风连绵不断，隔三差五的便有依次自入夜到天明，自阳光升起到日斜西头的雨。备上两双防水的鞋，就是在这时候用了。 地上有大大小小的水洼，彰显着校园里不完美的道路施工和排水系统，也侧映出40年的风雨沧桑，一个年轻的高校是相对世界的诸多百年学府而言的，对我们来说这里像垂暮老人一样权威又严格。 坐下等待早自修结束的空档，望着校园的彼端，在碧波荡漾的日月湖畔，几座教学楼隐入晨间浅雾之中，在朦胧中格致楼与求是楼仿佛海市蜃楼勾人遐想。 靠近窗子，轻轻推开一个缝隙，感受缕缕清风，可以看见天空雾雨交织，轻柔洒落仿佛恋人轻抚世界，绵绵软软；而地面学生熙攘，撑伞而行仿若蘑菇出行，五颜六色。 铃声响起，身后也变得嘈杂起来，惊醒了惊醒了云端人的清梦，伊快速撤去雾气，令窗边人跌出幻想，匆匆收起书本走向教室。生活五味杂陈，忽而短暂的拥有诗与远方。","tags":["随笔"],"categories":["文艺的风"]},{"title":"蝇之惑","path":"/posts/4971.html","content":"教室里一如既往，老学究在讲台上倾授晦涩的知识，几个优等生随声附和着，使这课堂不至于无聊，但更多的是趴伏在桌子上，沉睡在天书的 BGM 中。蝇就是在这时出来的，它并不是一只普通的蝇，相较于同伴，它的块头比较大，颜色也更加艳丽，江湖人称绿豆蝇。蝇对于这个雅号还是接受的，这已经展示了它的主要特征，非要说还有什么不足，就是没有把它声音很大也概括进去。因为这个特点，多数绿豆蝇进入屋子很快就会被发现并杀死。 这只蝇并不是普通的蝇，它很聪明，虽然它的神经系统和它的兄弟姐妹们差不多，但它已经来到这间屋子三天了，没有被发现杀死，又学到了“孟德尔”“萨顿”“摩尔根”等一群人和它们的事迹。在为那不知名的同伴感到悲哀的同时，它觉得它已经可以放肆些了，毕竟它已经是一只“知识蝇”。 蝇还是很谨慎的，每一次活动前它都要先仔细寻找苍蝇拍，粘蝇纸一类的大杀器，也只在人许久不动，进入休眠状态时才会大胆活动。人一动不动，只有嘴巴偶尔一张一合，“像是鱼在水中呼吸时的样子”，窗子边就有一盆金鱼，对付它们，蝇已经轻车熟路，“这很安全，在鱼身上只要注意不要落水就好，何况这里没有水。”疲乏的蝇落在了人的身上。人的睫毛抖动了一下，呼吸也加重了几分，变化轻微，又在一瞬间就恢复原态，蝇并没有察觉，放松的蝇舒展着肢体，搓动前爪。 不知从何处传来音乐声，是著名的钢琴曲《爱的纪念》，它知道，是一位叫做理……的名人。这几天它总是可以听到这首曲子。很惬意的听着，危险是陡然间到来的，纵使它尽最大努力舞动翅膀，但方形课本破空时发出的气流将它卡在原处，无法离去。只能听着自己内脏绽开的声音，无力的挣动腿部，体会那个名为“知识”的力量。 那位讲解摩尔根的老人走下讲台，蝇倒在血泊中，耳中喧闹的声音愈发渺远，失去意识前，蝇看着被染红的身体，“原来绿色表皮下，我的血也是这般的红。”","tags":["奇思妙想","小说"],"categories":["文艺的风"]},{"title":"碎碎念","path":"/explore/index.html","content":"！[.&#x2F;posts&#x2F;一场无法出门的旅行]"},{"title":"关于","path":"/about/index.html","content":"公子语其人公子语，不称职的机械工程师，业余Python程序员，总希望自己的程序可以改变生活、改变现在的工作。 技术栈 Python pyside6 customtkinter Android kotlin compose flutter ahk godot 其他 xml json sql 我的项目 随着时间的推移，我写出的软件变得丰富起来，尤其是最近写出的《纸间书摘》api导入程序，已经算是一个成熟的软件，于是萌生了写自己的作品集的想法，今天写下一个目录，将作品汇总起来。 EpubEdit一个Python库，用于查看epub元信息，未来加如编辑功能。 语书摘(纸间书摘 API 导入项目）语书摘，是一个用于导入纸间书摘的 Python 脚本，该脚本可以通过纸间书摘的 API，将记录在软件中的书摘进行暂存，统一推送到手机上。 目前软件v0.2版本已经推出，GitHub提供windows版本安装包，经测试在linux上构建后也可以正常使用，需要用户自行编译。 新待办程序(当前在做)新待办程序是一个个人自用的待办软件，还处于开发完善阶段，其主要目的是用于补充市面上现有待办软件的功能性不足，如间隔事件时间逻辑、日历实现逻辑等。 My Project With the passage of time, I write software has become rich, especially recently wrote the “merpyzf” api import program, has been considered a mature software, so the idea of writing their own portfolio, today wrote a directory, will work together. EpubEdit A Python library for viewing epub meta information, with future additions such as editing functionality. Language book excerpt (paper book excerpt API import project) Language book excerpt is a Python script used to import paper book excerpt. This script can temporarily store the book excerpt recorded in the software through the paper book excerpt API and push it to the mobile phone uniformly. At present, the software version v0.2 has been launched, GitHub provides the Windows version installation package, which can also be used normally after being tested and built on Linux, requiring users to compile it themselves. New to-do program (currently in development) The new to-do program is a personal to-do software, which is still in the development stage. Its main purpose is to supplement the functional deficiencies of existing to-do software on the market, such as interval event time logic, calendar implementation logic, etc."}]